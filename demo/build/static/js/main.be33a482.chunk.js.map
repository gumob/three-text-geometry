{"version":3,"sources":["../../../src/utils/quad-indices.ts","../../../src/error/BMFontLoaderError.ts","../../../src/types/BMFontUtil.ts","../../../src/types/LayoutTypes.ts","reportWebVitals.ts","Navigation.tsx","../../../src/shader/MultiPageShaderMaterialParameters.ts","../../../src/shader/MultiPageShaderMaterial.ts","../../../src/layout/wordwrap.ts","../../../src/layout/layout.ts","../../src/index.ts","../../src/TextGeometry.ts","DemoBase.tsx","DemoMultipage.tsx","DemoSimple.tsx","effects/easing.ts","effects/shuffle.ts","DemoShuffle.tsx","shaders/effect.ts","DemoShader.tsx","DemoShuffleShader.tsx","index.tsx","../../../src/utils/compute.ts","../../../src/utils/vertices.ts","../../../src/utils/binary.ts","../../../src/parser/BMFontBinaryParser.ts","../../../src/parser/BMFontJsonParser.ts","../../../src/parser/BMFontXMLParser.ts","../../../src/parser/BMFontAsciiParser.ts","../../../src/loader/loader.ts"],"names":["BMFontLoaderErrorType","msg","Object","Error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navigation","Paper","sx","width","className","MenuList","dense","MenuItem","component","NavLink","to","React","Component","opt","end","i","undefined","this","tabSize","x","DemoBase","stats","controls","divID","renderer","scene","camera","textIndex","textList","_staticIndex","Math","floor","random","length","fontUri","textureUri","font","textures","textOption","textMesh","animationFrameID","index","self","loadAssets","values","forEach","value","THREE","push","assetsDidLoad","catch","e","console","error","cancelAnimationFrame","uri","textureLoaders","map","loadAsync","endsWith","BMFontLoader","loadAscii","loadJson","loadXML","loadBinary","Promise","all","initBaseScene","initScene","updateScene","alpha","setClearColor","setPixelRatio","window","devicePixelRatio","setSize","innerWidth","innerHeight","container","document","querySelector","append","domElement","Stats","showPanel","body","appendChild","dom","background","fog","position","set","lookAt","OrbitControls","target","autoRotate","update","addEventListener","onWindowResize","bind","onClicked","render","requestAnimationFrame","aspect","updateProjectionMatrix","id","DemoMultipage","align","TextAlign","Left","flipY","multipage","textGeometry","TextGeometry","staticText","box","computeBoundingBox","boundingBox","getSize","params","MultiPageShaderMaterialParameters","transparent","opacity","alphaTest","color","textMaterial","side","scale","multiply","y","add","DemoSimple","randomText","Easing","currentTime","from","duration","change","cos","PI","sin","pow","sqrt","s","p","a","abs","asin","easeOutBounce","easeInBounce","randFloat","min","max","ShuffleState","ShuffleTextError","message","name","setPrototypeOf","prototype","ShuffleChar","char","option","callback","originalChar","currentChar","shuffleText","ignoreRegex","delay","shuffleDuration","fadeDuration","interval","timeUpdated","state","Idle","onCharStateChanged","toLowerCase","toLocaleLowerCase","toUpperCase","test","charAt","time","Updating","localTime","linear","Completed","Cancelled","ShuffleText","text","textStateHandler","_originalText","_currentText","_chars","_timeStart","_numCompleted","_animationFrame","_state","_textStateHandler","split","filter","arr","indexOf","join","replaceAll","letters","letter","_onCharStateChanged","performance","now","start","_update","timeDiff","currentText","cancel","DemoShuffle","shuffleTimeoutID","shuffle","clearTimeout","timeout","geometry","setTimeout","fragmentShader","vertexShader","DemoShader","swapTimeoutID","clock","stop","uniforms","animate","iGlobalTime","depthTest","dt","getDelta","mat","needsUpdate","swapText","DemoShuffleShader","ReactDOM","StrictMode","path","element","getElementById","output","positions","pages","uvs"],"mappings":"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","file":"static/js/main.be33a482.chunk.js","sourcesContent":["import { dtype } from \"./\";\nfunction createIndices(array = null, opt = null) {\n    /** if user didn't specify an output array */\n    let arr = null;\n    if (!array || !(Array.isArray(array) || Buffer.isBuffer(array))) {\n        opt = array || {};\n        arr = null;\n    }\n    else {\n        arr = array;\n    }\n    opt = opt || {};\n    const type = typeof opt.type === 'string' ? opt.type : 'uint16';\n    const count = opt.count !== undefined ? opt.count : 1;\n    const start = opt.start !== undefined ? opt.start : 0;\n    const clockwise = typeof opt.clockwise === 'boolean' ? opt.clockwise : true;\n    const dir = clockwise ? [0, 2, 3] : [2, 1, 3];\n    const a = dir[0] || 0;\n    const b = dir[1] || 0;\n    const c = dir[2] || 0;\n    const numIndices = count * 6;\n    const indices = arr || new (dtype(type) || Uint16Array)(numIndices);\n    for (let i = 0, j = 0; i < numIndices; i += 6, j += 4) {\n        const x = i + start;\n        indices[x + 0] = j + 0;\n        indices[x + 1] = j + 1;\n        indices[x + 2] = j + 2;\n        indices[x + 3] = j + a;\n        indices[x + 4] = j + b;\n        indices[x + 5] = j + c;\n    }\n    return indices;\n}\nexport { createIndices };\n//# sourceMappingURL=quad-indices.js.map","var BMFontLoaderErrorType;\n(function (BMFontLoaderErrorType) {\n    BMFontLoaderErrorType[\"LoadError\"] = \"LoadError\";\n    BMFontLoaderErrorType[\"ParseError\"] = \"ParseError\";\n})(BMFontLoaderErrorType || (BMFontLoaderErrorType = {}));\nclass BMFontLoaderError extends Error {\n    constructor(type, message = undefined) {\n        let msg;\n        switch (type) {\n            case BMFontLoaderErrorType.ParseError:\n                msg = message ? message : 'Failed to parse data';\n                break;\n            case BMFontLoaderErrorType.LoadError:\n                msg = message ? message : 'Failed to load data';\n                break;\n        }\n        super(msg);\n        this.name = type;\n        Object.setPrototypeOf(this, BMFontLoaderError.prototype);\n    }\n}\nexport { BMFontLoaderError, BMFontLoaderErrorType };\n//# sourceMappingURL=BMFontLoaderError.js.map","function isBMFont(value) {\n    return 'chars' in value && 'info' in value && 'common' in value && 'kernings' in value;\n}\nfunction DefaultBMFont() {\n    return {\n        pages: [],\n        chars: [],\n        info: DefaultBMFontInfo(),\n        common: DefaultBMFontCommon(),\n        distanceField: DefaultBMFontDistanceField(),\n        kernings: [],\n    };\n}\nfunction DefaultBMFontInfo() {\n    return {\n        face: '',\n        size: 0,\n        bold: 0,\n        italic: 0,\n        charset: [],\n        unicode: 0,\n        stretchH: 0,\n        smooth: 0,\n        aa: 0,\n        padding: [],\n        spacing: [],\n        fixedHeight: 0,\n        outline: 0,\n    };\n}\nfunction DefaultBMFontCommon() {\n    return {\n        lineHeight: 0,\n        base: 0,\n        scaleW: 0,\n        scaleH: 0,\n        pages: 0,\n        packed: 0,\n        alphaChnl: 0,\n        redChnl: 0,\n        greenChnl: 0,\n        blueChnl: 0,\n    };\n}\nfunction DefaultBMFontKern() {\n    return {\n        first: 0,\n        second: 0,\n        amount: 0,\n    };\n}\nfunction DefaultBMFontDistanceField() {\n    return {\n        fieldType: '',\n        distanceRange: 0,\n    };\n}\nexport { DefaultBMFont, DefaultBMFontCommon, DefaultBMFontDistanceField, DefaultBMFontInfo, DefaultBMFontKern, isBMFont, };\n//# sourceMappingURL=BMFontUtil.js.map","var TextAlign;\n(function (TextAlign) {\n    TextAlign[TextAlign[\"Left\"] = 0] = \"Left\";\n    TextAlign[TextAlign[\"Center\"] = 1] = \"Center\";\n    TextAlign[TextAlign[\"Right\"] = 2] = \"Right\";\n    // Left = 'left',\n    // Center = 'center',\n    // Right = 'right',\n})(TextAlign || (TextAlign = {}));\nvar WordWrapMode;\n(function (WordWrapMode) {\n    WordWrapMode[\"Pre\"] = \"pre\";\n    WordWrapMode[\"NoWrap\"] = \"nowrap\";\n})(WordWrapMode || (WordWrapMode = {}));\nexport { TextAlign, WordWrapMode, };\n//# sourceMappingURL=LayoutTypes.js.map","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport Paper from '@mui/material/Paper'\nimport MenuList from '@mui/material/MenuList'\nimport MenuItem from '@mui/material/MenuItem'\n// import ListItemIcon from '@mui/material/ListItemIcon'\n// import Check from '@mui/icons-material/Check';\n// import FormGroup from '@mui/material/FormGroup';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import Typography from '@mui/material/Typography';\n\nimport './Navigation.css'\n\nexport class Navigation extends React.Component {\n  render(): React.ReactNode {\n    // const path = this.props.location.pathname;\n    return (\n      <Paper sx={{ width: 160 }} className=\"Navigation\">\n        <MenuList dense>\n          {/* <MenuItem component={NavLink} to=\"/simple\" selected={location === '/simple' ? true : false}> */}\n          <MenuItem component={NavLink} to=\"/simple\">\n            {/* <ListItemIcon>\n              <Check />\n            </ListItemIcon> */}\n            Simple\n          </MenuItem>\n          {/* <MenuItem component={NavLink} to=\"/multipage\">\n          Multipage\n          </MenuItem> */}\n          <MenuItem component={NavLink} to=\"/shuffle\">\n            Shuffle\n          </MenuItem>\n          <MenuItem component={NavLink} to=\"/shader\">\n            Shader\n          </MenuItem>\n          <MenuItem component={NavLink} to=\"/shuffleshader\">\n            Shuffle and Shader\n          </MenuItem>\n          {/* <MenuItem>\n            <FormGroup>\n              <FormControlLabel control={<Checkbox defaultChecked size=\"small\" />} label={<Typography variant=\"body2\">Show Axes</Typography>} />\n            </FormGroup>\n          </MenuItem> */}\n        </MenuList>\n      </Paper>\n    )\n  }\n}\n\nexport default Navigation\n","import * as THREE from 'three';\nexport class MultiPageShaderMaterialParameters {\n    constructor(param) {\n        const opt = param || {};\n        const opacity = typeof opt.opacity === 'number' ? opt.opacity : 1;\n        const precision = opt.precision || 'highp';\n        const alphaTest = typeof opt.alphaTest === 'number' ? opt.alphaTest : 0.0001;\n        const textures = opt.textures || [];\n        const baseUniforms = {};\n        textures.forEach((tex, i) => {\n            baseUniforms['texture' + i] = {\n                type: 't',\n                value: tex,\n            };\n        });\n        const samplers = textures\n            .map(function (tex, i) {\n            return 'uniform sampler2D texture' + i + ';';\n        })\n            .join('\\n');\n        const body = textures\n            .map(function (tex, i) {\n            var cond = i === 0 ? 'if' : 'else if';\n            return [\n                cond + ' (vPage == ' + i + '.0) {',\n                'sampleColor = texture2D(texture' + i + ', vUv);',\n                '}',\n            ].join('\\n');\n        })\n            .join('\\n');\n        const color = opt.color;\n        // remove to satisfy r73\n        delete opt.textures;\n        delete opt.color;\n        delete opt.precision;\n        delete opt.opacity;\n        let attributes = {\n            attributes: { page: { type: 'f', value: 0 } },\n        };\n        const threeVers = (parseInt(THREE.REVISION, 10) || 0) | 0;\n        if (threeVers >= 72) {\n            attributes = undefined;\n        }\n        const discard = alphaTest === 0 ? '' : `if (gl_FragColor.a < ${alphaTest}) discard;`;\n        const variables = Object.assign({\n            uniforms: Object.assign({}, baseUniforms, {\n                opacity: { type: 'f', value: opacity },\n                color: { type: 'c', value: color },\n            }),\n            vertexShader: `\n                attribute vec4 position;\n                attribute vec2 uv;\n                attribute float page;\n                uniform mat4 projectionMatrix;\n                uniform mat4 modelViewMatrix;\n                varying vec2 vUv;\n                varying float vPage;\n                void main() {\n                    vUv = uv;\n                    vPage = page;\n                    gl_Position = projectionMatrix * modelViewMatrix * position;\n                }\n                `,\n            fragmentShader: `\n                precision ${precision} float;\n                uniform float opacity;\n                uniform vec3 color;\n                ${samplers}\n                varying float vPage;\n                varying vec2 vUv;\n                void main() {\n                    vec4 sampleColor = vec4(0.0);\n                    ${body}\n                    gl_FragColor = sampleColor * vec4(color, opacity);\n                    ${discard}\n                }\n                `,\n        }, attributes, opt);\n        this.uniforms = variables.uniforms;\n        this.vertexShader = variables.vertexShader;\n        this.fragmentShader = variables.fragmentShader;\n    }\n}\n//# sourceMappingURL=MultiPageShaderMaterialParameters.js.map","import * as THREE from 'three';\nexport class MultiPageShaderMaterial extends THREE.ShaderMaterial {\n    constructor(parameters) {\n        super(parameters);\n        /** TODO: Implement this class */\n    }\n}\n//# sourceMappingURL=MultiPageShaderMaterial.js.map","/**\n *\n * https://github.com/mattdesl/word-wrapper\n *\n */\nimport { WordWrapMode } from \"../types\";\nclass WordWrap {\n    wrap(text, option = {}) {\n        return this.lines(text, option)\n            .map((line) => text.substring(line.start, line.end))\n            .join('\\n');\n    }\n    lines(text, option = {}) {\n        /** zero width results in nothing visible */\n        const opt = {\n            start: undefined,\n            end: undefined,\n            width: undefined,\n            mode: undefined,\n            measure: undefined,\n        };\n        text = text || '';\n        if (option.start !== undefined)\n            opt.start = Math.max(0, option.start);\n        else\n            opt.start = 0;\n        if (option.end !== undefined)\n            opt.end = option.end;\n        else\n            opt.end = text.length;\n        if (option.width !== undefined)\n            opt.width = option.width;\n        else\n            opt.width = Number.MAX_VALUE;\n        if (option.mode !== undefined)\n            opt.mode = option.mode;\n        opt.measure = option.measure || this.monospace;\n        if (opt.width === 0 && opt.mode !== WordWrapMode.NoWrap)\n            return [];\n        if (option.mode === WordWrapMode.Pre)\n            return this.pre(opt.measure, text, opt.start, opt.end, opt.width);\n        else\n            return this.greedy(opt.measure, text, opt.start, opt.end, opt.width, opt.mode);\n    }\n    idxOf(text, chr, start, end) {\n        const idx = text.indexOf(chr, start);\n        if (idx === -1 || idx > end)\n            return end;\n        return idx;\n    }\n    isWhitespace(chr) {\n        return WordWrap.whitespaceRegexp.test(chr);\n    }\n    pre(measure, text, start, end, width) {\n        const lines = [];\n        let lineStart = start;\n        for (let i = start; i < end && i < text.length; i++) {\n            const chr = text.charAt(i);\n            const isNewline = WordWrap.newlineRegexp.test(chr);\n            /** If we've reached a newline, then step down a line */\n            /** Or if we've reached the EOF */\n            if (isNewline || i === end - 1) {\n                const lineEnd = isNewline ? i : i + 1;\n                const measured = measure(text, lineStart, lineEnd, width);\n                lines.push(measured);\n                lineStart = i + 1;\n            }\n        }\n        return lines;\n    }\n    greedy(measure, text, start, end, width, mode) {\n        /** A greedy word wrapper based on LibGDX algorithm */\n        /** https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java */\n        const lines = [];\n        let testWidth = width;\n        /** if WordWrapMode.NoWrap is specified, we only wrap on newline chars */\n        if (mode === WordWrapMode.NoWrap)\n            testWidth = Number.MAX_VALUE;\n        while (start < end && start < text.length) {\n            /** get next newline position */\n            const newLine = this.idxOf(text, WordWrap.newlineChar, start, end);\n            /** eat whitespace at start of line */\n            while (start < newLine) {\n                if (!this.isWhitespace(text.charAt(start)))\n                    break;\n                start++;\n            }\n            /** determine visible # of glyphs for the available width */\n            const measured = measure(text, start, newLine, testWidth);\n            let lineEnd = start + (measured.end - measured.start);\n            let nextStart = lineEnd + WordWrap.newlineChar.length;\n            /** if we had to cut the line before the next newline... */\n            if (lineEnd < newLine) {\n                /** find char to break on */\n                while (lineEnd > start) {\n                    if (this.isWhitespace(text.charAt(lineEnd)))\n                        break;\n                    lineEnd--;\n                }\n                if (lineEnd === start) {\n                    if (nextStart > start + WordWrap.newlineChar.length)\n                        nextStart--;\n                    lineEnd = nextStart; /**  If no characters to break, show all. */\n                }\n                else {\n                    nextStart = lineEnd;\n                    /** eat whitespace at end of line */\n                    while (lineEnd > start) {\n                        if (!this.isWhitespace(text.charAt(lineEnd - WordWrap.newlineChar.length)))\n                            break;\n                        lineEnd--;\n                    }\n                }\n            }\n            if (lineEnd >= start) {\n                lines.push(measure(text, start, lineEnd, testWidth));\n            }\n            start = nextStart;\n        }\n        return lines;\n    }\n    /** determines the visible number of glyphs within a given width */\n    monospace(_, start, end, width) {\n        const glyphs = Math.min(width, end - start);\n        return {\n            start: start,\n            end: start + glyphs,\n            width: 0,\n        };\n    }\n}\nWordWrap.newlineRegexp = /\\n/;\nWordWrap.whitespaceRegexp = /\\s/;\nWordWrap.newlineChar = '\\n';\nexport { WordWrap };\n//# sourceMappingURL=wordwrap.js.map","import { WordWrap } from \"./\";\nimport { TextAlign } from \"../types\";\nclass TextLayout {\n    constructor(text, option = {}) {\n        this._opt = {\n            font: undefined,\n            letterSpacing: undefined,\n            tabSize: undefined,\n            lineHeight: undefined,\n            align: undefined,\n            start: undefined,\n            end: undefined,\n            width: undefined,\n            mode: undefined,\n            measure: undefined,\n        };\n        // private _linesTotal = 0;\n        this._fallbackSpaceGlyph = null;\n        this._fallbackTabGlyph = null;\n        if (option.font === undefined)\n            throw new TypeError('Must specify a `font` in options');\n        this._opt.font = option.font;\n        this.update(text, option);\n    }\n    get option() {\n        return { ...this._opt };\n    }\n    get glyphs() {\n        var _a;\n        return (_a = this._glyphs) !== null && _a !== void 0 ? _a : [];\n    }\n    get width() {\n        var _a;\n        return (_a = this._width) !== null && _a !== void 0 ? _a : 0;\n    }\n    get height() {\n        var _a;\n        return (_a = this._height) !== null && _a !== void 0 ? _a : 0;\n    }\n    get descender() {\n        var _a;\n        return (_a = this._descender) !== null && _a !== void 0 ? _a : 0;\n    }\n    get ascender() {\n        var _a;\n        return (_a = this._ascender) !== null && _a !== void 0 ? _a : 0;\n    }\n    get xHeight() {\n        var _a;\n        return (_a = this._xHeight) !== null && _a !== void 0 ? _a : 0;\n    }\n    get baseline() {\n        var _a;\n        return (_a = this._baseline) !== null && _a !== void 0 ? _a : 0;\n    }\n    get capHeight() {\n        var _a;\n        return (_a = this._capHeight) !== null && _a !== void 0 ? _a : 0;\n    }\n    get lineHeight() {\n        var _a;\n        return (_a = this._lineHeight) !== null && _a !== void 0 ? _a : 0;\n    }\n    toString() {\n        return `{\n  glyphs: ${this.glyphs.length}\n  width: ${this.width}\n  height: ${this.height}\n  descender: ${this.descender}\n  ascender: ${this.ascender}\n  xHeight: ${this.xHeight}\n  baseline: ${this.baseline}\n  capHeight: ${this.capHeight}\n  lineHeight: ${this.lineHeight}\n}`;\n    }\n    update(text, option = {}) {\n        /** Initalize variables */\n        this._glyphs = [];\n        this._width = 0;\n        this._height = 0;\n        this._descender = 0;\n        this._ascender = 0;\n        this._xHeight = 0;\n        this._baseline = 0;\n        this._capHeight = 0;\n        this._lineHeight = 0;\n        /** Initalize options */\n        if (option.font !== undefined)\n            this._opt.font = option.font;\n        if (option.start !== undefined)\n            this._opt.start = Math.max(0, option.start);\n        else\n            this._opt.start = 0;\n        if (option.end !== undefined)\n            this._opt.end = option.end;\n        else\n            this._opt.end = text.length;\n        if (option.width !== undefined)\n            this._opt.width = option.width;\n        if (option.align !== undefined)\n            this._opt.align = option.align;\n        else\n            this._opt.align = TextAlign.Left;\n        if (option.mode !== undefined)\n            this._opt.mode = option.mode;\n        if (option.letterSpacing !== undefined)\n            this._opt.letterSpacing = option.letterSpacing;\n        else\n            this._opt.letterSpacing = 0;\n        if (option.lineHeight !== undefined)\n            this._opt.lineHeight = option.lineHeight;\n        else\n            this._opt.lineHeight = this._opt.font.common.lineHeight;\n        if (option.tabSize !== undefined)\n            this._opt.tabSize = option.tabSize;\n        else\n            this._opt.tabSize = 4;\n        this._opt.measure = this.computeMetrics.bind(this);\n        this._setupSpaceGlyphs(this._opt.font, this._opt.tabSize);\n        const font = this._opt.font;\n        const lines = new WordWrap().lines(text, this._opt);\n        const minWidth = this._opt.width || 0;\n        /** get max line width */\n        const maxLineWidth = lines.reduce((prev, line) => {\n            return Math.max(prev, line.width, minWidth);\n        }, 0);\n        /** the pen position */\n        let x = 0;\n        let y = 0;\n        const lineHeight = this._opt.lineHeight;\n        const baseline = font.common.base;\n        const descender = lineHeight - baseline;\n        const letterSpacing = this._opt.letterSpacing;\n        const height = lineHeight * lines.length - descender;\n        const align = this._opt.align;\n        /** draw text along baseline */\n        y -= height;\n        /** the metrics for this text layout */\n        this._width = maxLineWidth;\n        this._height = height;\n        this._descender = lineHeight - baseline;\n        this._baseline = baseline;\n        this._xHeight = this.getXHeight(font);\n        this._capHeight = this.getCapHeight(font);\n        this._lineHeight = lineHeight;\n        this._ascender = lineHeight - descender - this._xHeight;\n        /** layout each glyph */\n        for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n            const line = lines[lineIndex];\n            const start = line.start;\n            const end = line.end;\n            const lineWidth = line.width;\n            let lastGlyph = undefined;\n            /** for each glyph in that line... */\n            for (let i = start; i < end; i++) {\n                const id = text.charCodeAt(i);\n                // const glyph = wthis.deref()?.getGlyph(font, id);\n                const glyph = this.getGlyph(font, id);\n                if (glyph) {\n                    if (lastGlyph)\n                        x += this.getKerning(font, lastGlyph.id, glyph.id);\n                    let tx = x;\n                    if (align === TextAlign.Center)\n                        tx += (maxLineWidth - lineWidth) / 2;\n                    else if (align === TextAlign.Right)\n                        tx += maxLineWidth - lineWidth;\n                    this._glyphs.push({\n                        position: [tx, y],\n                        data: glyph,\n                        index: i,\n                        line: lineIndex,\n                    });\n                    /** move pen forward */\n                    x += glyph.xadvance + letterSpacing;\n                    lastGlyph = glyph;\n                }\n            }\n            /** next line DOWN */\n            y += lineHeight;\n            x = 0;\n        }\n    }\n    _setupSpaceGlyphs(font, tabSize) {\n        /** These are fallbacks, when the font doesn't include */\n        /** ' ' or '\\t' _glyphs */\n        this._fallbackSpaceGlyph = null;\n        this._fallbackTabGlyph = null;\n        if (!font.chars || font.chars.length === 0)\n            return;\n        /** try to get space glyph */\n        /** then fall back to the 'm' or 'w' _glyphs */\n        /** then fall back to the first glyph available */\n        const space = this.getGlyphById(font, TextLayout.SPACE_ID) || this.getMGlyph(font) || font.chars[0];\n        if (!space)\n            return;\n        /** and create a fallback for tab */\n        const tabWidth = tabSize * space.xadvance;\n        this._fallbackSpaceGlyph = { ...space };\n        this._fallbackTabGlyph = Object.assign({ ...space }, {\n            x: 0,\n            y: 0,\n            xadvance: tabWidth,\n            id: TextLayout.TAB_ID,\n            xoffset: 0,\n            yoffset: 0,\n            width: 0,\n            height: 0,\n        });\n    }\n    getGlyph(font, id) {\n        const glyph = this.getGlyphById(font, id);\n        if (glyph)\n            return glyph;\n        else if (id === TextLayout.TAB_ID)\n            return this._fallbackTabGlyph;\n        else if (id === TextLayout.SPACE_ID)\n            return this._fallbackSpaceGlyph;\n        return null;\n    }\n    computeMetrics(text, start, end, width) {\n        const letterSpacing = this._opt.letterSpacing || 0;\n        const font = this._opt.font;\n        let curPen = 0;\n        let curWidth = 0;\n        let count = 0;\n        if (!font || !font.chars || font.chars.length === 0) {\n            return {\n                start: start,\n                end: start,\n                width: 0,\n            };\n        }\n        end = Math.min(text.length, end);\n        let lastGlyph;\n        for (let i = start; i < end; i++) {\n            const id = text.charCodeAt(i);\n            const glyph = this.getGlyph(font, id);\n            if (glyph) {\n                /** move pen forward */\n                // const xoff = glyph.xoffset;\n                const kern = lastGlyph ? this.getKerning(font, lastGlyph.id, glyph.id) : 0;\n                curPen += kern;\n                const nextPen = curPen + glyph.xadvance + letterSpacing;\n                const nextWidth = curPen + glyph.width;\n                /** we've hit our limit; we can't move onto the next glyph */\n                if (nextWidth >= width || nextPen >= width)\n                    break;\n                /** otherwise continue along our line */\n                curPen = nextPen;\n                curWidth = nextWidth;\n                lastGlyph = glyph;\n            }\n            count++;\n        }\n        /** make sure rightmost edge lines up with rendered _glyphs */\n        if (lastGlyph)\n            curWidth += lastGlyph.xoffset;\n        return {\n            start: start,\n            end: start + count,\n            width: curWidth,\n        };\n    }\n    getGlyphById(font, id) {\n        if (!font.chars || font.chars.length === 0)\n            return undefined;\n        const glyphIdx = this.findChar(font.chars, id);\n        if (glyphIdx >= 0)\n            return font.chars[glyphIdx];\n        return undefined;\n    }\n    getXHeight(font) {\n        for (let i = 0; i < TextLayout.X_HEIGHTS.length; i++) {\n            const id = TextLayout.X_HEIGHTS[i].charCodeAt(0);\n            const idx = this.findChar(font.chars, id);\n            if (idx >= 0)\n                return font.chars[idx].height;\n        }\n        return 0;\n    }\n    getMGlyph(font) {\n        for (let i = 0; i < TextLayout.M_WIDTHS.length; i++) {\n            const id = TextLayout.M_WIDTHS[i].charCodeAt(0);\n            const idx = this.findChar(font.chars, id);\n            if (idx >= 0)\n                return font.chars[idx];\n        }\n        return undefined;\n    }\n    getCapHeight(font) {\n        for (let i = 0; i < TextLayout.CAP_HEIGHTS.length; i++) {\n            const id = TextLayout.CAP_HEIGHTS[i].charCodeAt(0);\n            const idx = this.findChar(font.chars, id);\n            if (idx >= 0)\n                return font.chars[idx].height;\n        }\n        return 0;\n    }\n    getKerning(font, left, right) {\n        if (!font.kernings || font.kernings.length === 0)\n            return 0;\n        const table = font.kernings;\n        for (let i = 0; i < table.length; i++) {\n            const kern = table[i];\n            if (kern.first === left && kern.second === right)\n                return kern.amount;\n        }\n        return 0;\n    }\n    findChar(array, value) {\n        for (let i = 0; i < array.length; i++) {\n            if (array[i].id === value)\n                return i;\n        }\n        return -1;\n    }\n}\nTextLayout.X_HEIGHTS = ['x', 'e', 'a', 'o', 'n', 's', 'r', 'c', 'u', 'm', 'v', 'w', 'z'];\nTextLayout.M_WIDTHS = ['m', 'w'];\nTextLayout.CAP_HEIGHTS = ['H', 'I', 'N', 'E', 'F', 'K', 'L', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\nTextLayout.TAB_ID = '\\t'.charCodeAt(0);\nTextLayout.SPACE_ID = ' '.charCodeAt(0);\nexport { TextLayout };\n//# sourceMappingURL=layout.js.map","import { BMFontLoader } from './loader';\nimport { MultiPageShaderMaterial, MultiPageShaderMaterialParameters } from './shader';\nimport TextGeometry from './TextGeometry';\nimport { TextAlign, WordWrapMode, } from './types';\nexport { BMFontLoader, TextAlign, WordWrapMode, MultiPageShaderMaterial, MultiPageShaderMaterialParameters, };\nexport default TextGeometry;\n//# sourceMappingURL=index.js.map","import * as THREE from 'three';\nimport { TextLayout } from \"./layout\";\nimport { TextAlign } from \"./types\";\nimport { computeBox, computeSphere, createIndices, extractPages, extractPositions, extractUVs } from \"./utils\";\nclass TextGeometry extends THREE.BufferGeometry {\n    constructor(text, option = {}) {\n        super();\n        this._opt = {\n            font: undefined,\n            start: undefined,\n            end: undefined,\n            width: undefined,\n            mode: undefined,\n            align: undefined,\n            letterSpacing: undefined,\n            lineHeight: undefined,\n            tabSize: undefined,\n            flipY: true,\n            multipage: false,\n        };\n        this._visibleGlyphs = [];\n        if (option.font === undefined)\n            throw new TypeError('Must specify a `font` in options');\n        this._opt.font = option.font;\n        this.update(text, option);\n    }\n    get option() {\n        return { ...this._opt };\n    }\n    get visibleGlyphs() {\n        return this._visibleGlyphs;\n    }\n    update(text, option = {}) {\n        if (option.font !== undefined)\n            this._opt.font = option.font;\n        if (option.start !== undefined)\n            this._opt.start = Math.max(0, option.start);\n        else\n            this._opt.start = 0;\n        if (option.end !== undefined)\n            this._opt.end = option.end;\n        else\n            this._opt.end = text.length;\n        if (option.width !== undefined)\n            this._opt.width = option.width;\n        if (option.align !== undefined)\n            this._opt.align = option.align;\n        else\n            this._opt.align = TextAlign.Left;\n        if (option.mode !== undefined)\n            this._opt.mode = option.mode;\n        if (option.letterSpacing !== undefined)\n            this._opt.letterSpacing = option.letterSpacing;\n        else\n            this._opt.letterSpacing = 0;\n        if (option.lineHeight !== undefined)\n            this._opt.lineHeight = option.lineHeight;\n        else\n            this._opt.lineHeight = this._opt.font.common.lineHeight;\n        if (option.tabSize !== undefined)\n            this._opt.tabSize = option.tabSize;\n        else\n            this._opt.tabSize = 4;\n        if (option.flipY !== undefined)\n            this._opt.flipY = option.flipY;\n        if (option.multipage !== undefined)\n            this._opt.multipage = option.multipage;\n        /** determine texture size from font file */\n        const texWidth = this._opt.font.common.scaleW;\n        const texHeight = this._opt.font.common.scaleH;\n        /** get visible glyphs */\n        const layout = new TextLayout(text, this._opt);\n        const glyphs = layout.glyphs.filter(function (glyph) {\n            const bitmap = glyph.data;\n            return bitmap.width * bitmap.height > 0;\n        });\n        // console.log('glyphs', glyphs);\n        /** provide visible glyphs for convenience */\n        this._visibleGlyphs = glyphs;\n        /** get common vertex data */\n        const positions = extractPositions(glyphs);\n        const uvs = extractUVs(glyphs, texWidth, texHeight, this._opt.flipY);\n        const indices = createIndices([], {\n            clockwise: true,\n            type: 'uint16',\n            count: glyphs.length,\n        });\n        // console.log('positions', positions);\n        // console.log('uvs', uvs);\n        // console.log('indices', indices);\n        /** update vertex data */\n        this.setIndex(indices);\n        this.setAttribute('position', new THREE.BufferAttribute(positions, 2));\n        this.setAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n        // console.log('this.attributes.position', this.attributes.position);\n        // console.log('this.attributes.uv', this.attributes.uv);\n        /** update multipage data */\n        if (!this._opt.multipage && 'page' in this.attributes) {\n            this.deleteAttribute('page'); /** disable multipage rendering */\n        }\n        else if (this._opt.multipage) {\n            this.setAttribute('page', new THREE.BufferAttribute(extractPages(glyphs), 1)); /** enable multipage rendering */\n        }\n    }\n    computeBoundingSphere() {\n        if (this.boundingSphere === null)\n            this.boundingSphere = new THREE.Sphere();\n        if (!this.attributes.position)\n            return;\n        const positions = this.attributes.position.array;\n        const itemSize = this.attributes.position.itemSize;\n        if (!positions || !itemSize || positions.length < 2) {\n            this.boundingSphere.radius = 0;\n            this.boundingSphere.center.set(0, 0, 0);\n            return;\n        }\n        computeSphere(positions, this.boundingSphere);\n        if (isNaN(this.boundingSphere.radius)) {\n            console.error('THREE.BufferGeometry.computeBoundingSphere(): ' +\n                'Computed radius is NaN. The ' +\n                '\"position\" attribute is likely to have NaN values.');\n        }\n    }\n    computeBoundingBox() {\n        if (this.boundingBox === null)\n            this.boundingBox = new THREE.Box3();\n        const bbox = this.boundingBox;\n        if (!this.attributes.position)\n            return;\n        const positions = this.attributes.position.array;\n        const itemSize = this.attributes.position.itemSize;\n        if (!positions || !itemSize || positions.length < 2) {\n            bbox.makeEmpty();\n            return;\n        }\n        computeBox(positions, bbox);\n    }\n}\nexport default TextGeometry;\n//# sourceMappingURL=TextGeometry.js.map","import React from 'react'\nimport * as THREE from 'three'\nimport Stats from 'three/examples/jsm/libs/stats.module'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport { BMFontLoader, BMFont } from 'three-text-geometry'\n\nimport './Demo.css'\nimport { TextGeometryOption } from 'three-text-geometry/dist-cjs/types'\n\nexport class DemoBase extends React.Component {\n  stats?: Stats | undefined\n  controls?: OrbitControls | undefined\n\n  divID: string = 'Demo'\n\n  renderer?: THREE.WebGLRenderer\n  scene?: THREE.Scene\n  camera?: THREE.PerspectiveCamera\n\n  textIndex: number = 0\n  textList: string[] = [\n    `Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\nNulla enim odio, tincidunt sed fringilla sed, placerat vel lectus.\\nDuis non sapien nulla.\\nIn convallis nulla nec nulla varius rutrum.\\nNunc augue augue, ornare in cursus egestas, cursus vel magna.\\nFusce at felis vel tortor sagittis tincidunt nec vitae nisl.\\nSed efficitur nibh consequat tortor pulvinar, dignissim tincidunt risus hendrerit.\\nSuspendisse quis commodo nulla.\\nUt orci urna, mollis non nisl id, molestie tristique purus.\\nPhasellus efficitur laoreet eros vehicula convallis.\\nSed imperdiet, lectus a facilisis tempus, elit orci varius ante, at lacinia odio massa et quam.\\nQuisque vulputate nulla vitae feugiat aliquam.\\nVivamus vel mauris sit amet est rhoncus molestie at quis neque.\\nDuis faucibus laoreet tempus.\\nMaecenas metus velit, lobortis sit amet mauris at, vehicula condimentum velit.\\nVestibulum ornare eu turpis vel laoreet.\\nNunc ac cursus nunc, non porttitor arcu.`,\n    `Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\nFusce dapibus vehicula semper.\\nAliquam pulvinar enim quis tristique tincidunt.\\nSed faucibus turpis ipsum, non ultrices odio varius et.\\nDonec eget vulputate enim.\\nAenean posuere, dolor quis dapibus interdum, ipsum dolor molestie nunc, consequat tincidunt ex leo eu lectus.\\nInteger a risus iaculis, facilisis orci ac, maximus augue.\\nDonec at feugiat leo, at sollicitudin sapien.\\nNullam quis lacus consequat, sodales mi eleifend, efficitur tortor.\\nVivamus bibendum ante eu dolor convallis, id blandit felis placerat.\\nAliquam maximus at dolor eget facilisis.\\nMaecenas aliquam consequat urna eget ullamcorper.`,\n    `Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\nPraesent ac magna id tortor consectetur mattis.\\nMauris vel felis a urna suscipit dapibus.\\nSuspendisse nec tincidunt nulla.\\nCurabitur diam nisl, convallis eu porta id, tristique a nulla.\\nVestibulum ultrices rhoncus placerat.\\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\\nCurabitur egestas, libero id luctus placerat, enim erat sodales ipsum, sed pretium urna ante nec mi.\\nMauris justo nulla, vulputate id dui id, molestie fermentum neque.\\nNam cursus enim sit amet semper auctor.\\nPraesent ultricies tempor fringilla.\\nDuis libero eros, dictum at ligula quis, placerat consequat velit.\\nEtiam id fringilla neque.`,\n    `Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\nDonec diam odio, efficitur sed efficitur vel, vestibulum vitae odio.\\nAliquam semper, sem eget placerat ultricies, ligula sem faucibus magna, ut convallis est purus ac lectus.\\nNam quis quam eget augue tristique efficitur nec nec quam.\\nQuisque id turpis non magna mattis sagittis.\\nInteger efficitur elementum congue.\\nCurabitur ullamcorper rutrum orci a volutpat.\\nIn quam est, hendrerit id lorem sed, semper eleifend purus.\\nCras id sem mauris.`,\n    `Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\nVivamus eu mauris pretium, pellentesque justo at, sodales ligula.\\nPraesent vitae dolor porttitor, laoreet metus ut, posuere ligula.\\nMauris dolor ante, consectetur eu vulputate eget, tempus in nunc.\\nMaecenas bibendum eleifend lacus in sodales.\\nAenean mollis lorem a sem ultrices, nec lobortis erat eleifend.\\nCurabitur ante eros, porta eget mi a, bibendum luctus ante.\\nNulla est purus, posuere at rutrum sit amet, bibendum condimentum elit.\\nNunc nec sem enim.`,\n  ]\n\n  private _staticIndex = Math.floor(Math.random() * this.textList.length)\n  staticText(): string {\n    return this.textList[this._staticIndex]\n  }\n  randomText(): string {\n    const index = Math.floor(Math.random() * this.textList.length)\n    return this.textList[index]\n  }\n\n  fontUri: string =\n    'https://raw.githubusercontent.com/gumob/three-text-geometry/develop/tests/fonts/OdudoMono-Regular-64.json'\n  textureUri: string[] = [\n    'https://raw.githubusercontent.com/gumob/three-text-geometry/develop/tests/fonts/OdudoMono-Regular-64.png'\n  ]\n  font?: BMFont\n  textures: THREE.Texture[] = []\n\n  textOption?: TextGeometryOption\n  textMesh?: THREE.Mesh\n\n  animationFrameID?: any\n\n  componentDidMount() {\n    // this.loadFont()\n    const self = this\n    this.loadAssets(this.fontUri, this.textureUri)\n      .then((values: (BMFont | THREE.Texture)[]) => {\n        values.forEach((value: BMFont | THREE.Texture) => {\n          if (value instanceof THREE.Texture) {\n            self.textures.push(value as THREE.Texture)\n          } else {\n            self.font = value as BMFont\n          }\n        })\n        self.assetsDidLoad()\n      })\n      .catch((e) => {\n        console.error(e)\n      })\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.animationFrameID)\n  }\n\n  loadAssets(fontUri: string, textureUri: string[]): Promise<(BMFont | THREE.Texture)[]> {\n    const createFontLoader = (uri: string) => {\n      if (uri.endsWith('.fnt')) {\n        return new BMFontLoader().loadAscii(uri)\n      } else if (uri.endsWith('.json')) {\n        return new BMFontLoader().loadJson(uri)\n      } else if (uri.endsWith('.xml')) {\n        return new BMFontLoader().loadXML(uri)\n      } else {\n        return new BMFontLoader().loadBinary(uri)\n      }\n    }\n    // const textureLoaders: Promise<THREE.Texture[]> = Promise.all(textureUri.map((uri: string)=>{\n    //   return new THREE.TextureLoader().loadAsync(uri)\n    // }))\n    const textureLoaders: Promise<BMFont | THREE.Texture>[] = textureUri.map((uri: string) => {\n      return new THREE.TextureLoader().loadAsync(uri)\n    })\n    textureLoaders.push(createFontLoader(fontUri))\n    return Promise.all(textureLoaders)\n  }\n\n  assetsDidLoad() {\n    this.initBaseScene()\n    this.initScene()\n    this.updateScene()\n  }\n\n  private initBaseScene() {\n    /** Renderer */\n    this.renderer = new THREE.WebGLRenderer({ alpha: true })\n    this.renderer.setClearColor(0x000000, 0)\n    this.renderer.setPixelRatio(window.devicePixelRatio)\n    this.renderer.setSize(window.innerWidth, window.innerHeight)\n\n    const container = document.querySelector(`#${this.divID}`)\n    container?.append(this.renderer.domElement)\n\n    /** Stats Panel */\n    this.stats = Stats()\n    this.stats?.showPanel(0)\n    document.body.appendChild(this.stats.dom)\n\n    /** Scene */\n    this.scene = new THREE.Scene()\n    this.scene.background = new THREE.Color(0x000000)\n    this.scene.fog = new THREE.FogExp2(0x000104, 0.00035)\n\n    /** Camera */\n    this.camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 100000)\n    this.camera.position.set(1000, 1000, 2000)\n    this.camera.lookAt(0, 0, 0)\n\n    /** Control */\n    this.controls = new OrbitControls(this.camera!, this.renderer.domElement!)\n    this.controls.target.set(0, 0, 0)\n    this.controls.autoRotate = true\n    this.controls.update()\n\n    /** AxesHelper */\n    // const axes = new THREE.AxesHelper(1000).setColors(\n    //   new THREE.Color(0.3, 0.2, 0.2),\n    //   new THREE.Color(0.2, 0.3, 0.2),\n    //   new THREE.Color(0.2, 0.2, 0.3)\n    // )\n    // this.scene?.add(axes)\n\n    window.addEventListener('resize', this.onWindowResize.bind(this))\n    window.addEventListener('click', this.onClicked.bind(this))\n  }\n\n  initScene() {}\n\n  updateScene() {\n    this.controls?.update()\n    this.renderer?.render(this.scene!, this.camera!)\n    this.stats?.update()\n    this.animationFrameID = requestAnimationFrame(this.updateScene.bind(this))\n  }\n\n  onWindowResize(e: any) {\n    this.camera!.aspect = window.innerWidth / window.innerHeight\n    this.camera?.updateProjectionMatrix()\n    this.renderer?.setSize(window.innerWidth, window.innerHeight)\n  }\n\n  onClicked(e: any) {\n    this.controls!.autoRotate = false\n  }\n\n  render() {\n    return <div id={this.divID} className=\"Demo\"></div>\n  }\n}\n\nexport default DemoBase\n","import * as THREE from 'three'\nimport TextGeometry, { TextAlign, MultiPageShaderMaterialParameters } from 'three-text-geometry'\nimport DemoBase from './DemoBase'\n\nexport class DemoMultipage extends DemoBase {\n  fontUri: string =\n    'https://raw.githubusercontent.com/gumob/three-text-geometry/develop/tests/fonts/OdudoMono-Regular-64-Multipage.json'\n  textureUri: string[]= [\n    'https://raw.githubusercontent.com/gumob/three-text-geometry/develop/tests/fonts/OdudoMono-Regular-64-Multipage-0.png',\n    'https://raw.githubusercontent.com/gumob/three-text-geometry/develop/tests/fonts/OdudoMono-Regular-64-Multipage-1.png',\n    'https://raw.githubusercontent.com/gumob/three-text-geometry/develop/tests/fonts/OdudoMono-Regular-64-Multipage-2.png'\n  ]\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.animationFrameID)\n  }\n\n  initScene() {\n    super.initScene()\n    /** TextGeometryOption */\n    this.textOption = {\n      font: this.font,\n      align: TextAlign.Left,\n      width: 1600,\n      flipY: this.textures[0].flipY,\n      multipage: true\n    }\n\n    /** Geometry */\n    const textGeometry = new TextGeometry(this.staticText(), this.textOption)\n    const box = new THREE.Vector3()\n    textGeometry.computeBoundingBox()\n    textGeometry.boundingBox?.getSize(box)\n\n    /** Material */\n    const params: MultiPageShaderMaterialParameters = new MultiPageShaderMaterialParameters({\n      textures: this.textures,\n      transparent: true,\n      opacity: 0.95,\n      alphaTest: 0.5,\n      color: new THREE.Color(0x666666)\n    })\n    const textMaterial = new THREE.RawShaderMaterial(params)\n    textMaterial.side = THREE.DoubleSide\n\n    this.textMesh = new THREE.Mesh(textGeometry, textMaterial)\n    this.textMesh.scale.multiply(new THREE.Vector3(1, -1, 1))\n    this.textMesh.position.set(-box.x / 2, -box.y / 2, 0)\n    this.scene?.add(this.textMesh)\n  }\n}\n\nexport default DemoMultipage\n","import * as THREE from 'three'\nimport TextGeometry, { TextAlign } from 'three-text-geometry'\nimport DemoBase from './DemoBase'\n\nexport class DemoSimple extends DemoBase {\n  fontUri: string =\n    'https://raw.githubusercontent.com/gumob/three-text-geometry/develop/tests/fonts/Lato-Regular-64.fnt'\n  textureUri: string[] = [\n    'https://raw.githubusercontent.com/gumob/three-text-geometry/develop/tests/fonts/lato.png'\n  ]\n\n  initScene() {\n    super.initScene()\n\n    /** TextGeometryOption */\n    this.textOption = {\n      font: this.font,\n      align: TextAlign.Left,\n      width: 1600,\n      flipY: this.textures[0].flipY,\n    }\n\n    const textGeometry = new TextGeometry(this.randomText(), this.textOption)\n    const box = new THREE.Vector3()\n    textGeometry.computeBoundingBox()\n    textGeometry.boundingBox?.getSize(box)\n    const textMaterial = new THREE.MeshBasicMaterial({\n      map: this.textures[0],\n      side: THREE.DoubleSide,\n      transparent: true,\n      color: 0x666666,\n    })\n    this.textMesh = new THREE.Mesh(textGeometry, textMaterial)\n    this.textMesh.scale.multiply(new THREE.Vector3(1, -1, 1))\n    this.textMesh.position.set(-box.x / 2, -box.y / 2, 0)\n    this.scene?.add(this.textMesh)\n  }\n}\n\nexport default DemoSimple\n","/*\n * Adapted from EASING EQUATIONS by Robert Penner\n * @see https://easings.net\n * @see https://gist.github.com/Torthu/76793e41d11b972163823fd8967256c3\n *\n * TERMS OF USE - EASING EQUATIONS\n *\n * Open source under the BSD License.\n *\n * Copyright © 2001 Robert Penner\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice, this list of\n * conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice, this list\n * of conditions and the following disclaimer in the documentation and/or other materials\n * provided with the distribution.\n *\n * Neither the name of the author nor the names of contributors may be used to endorse\n * or promote products derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED\n * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n * OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// interface IEasingFunc {\n//   (currentTime: number, from: number, to: number, duration: number): number\n// }\n\n// export enum EasingCurve {\n//   Linear = 'Linear',\n//   EaseInQuad = 'EaseInQuad',\n//   EaseOutQuad = 'EaseOutQuad',\n//   EaseInOutQuad = 'EaseInOutQuad',\n//   EaseInCubic = 'EaseInCubic',\n//   EaseOutCubic = 'EaseOutCubic',\n//   EaseInOutCubic = 'EaseInOutCubic',\n//   EaseInQuart = 'EaseInQuart',\n//   EaseOutQuart = 'EaseOutQuart',\n//   EaseInOutQuart = 'EaseInOutQuart',\n//   EaseInQuint = 'EaseInQuint',\n//   EaseOutQuint = 'EaseOutQuint',\n//   EaseInOutQuint = 'EaseInOutQuint',\n//   EaseInSine = 'EaseInSine',\n//   EaseOutSine = 'EaseOutSine',\n//   EaseInOutSine = 'EaseInOutSine',\n//   EaseInExpo = 'EaseInExpo',\n//   EaseOutExpo = 'EaseOutExpo',\n//   EaseInOutExpo = 'EaseInOutExpo',\n//   EaseInCirc = 'EaseInCirc',\n//   EaseOutCirc = 'EaseOutCirc',\n//   EaseInOutCirc = 'EaseInOutCirc',\n//   EaseInElastic = 'EaseInElastic',\n//   EaseOutElastic = 'EaseOutElastic',\n//   EaseInOutElastic = 'EaseInOutElastic',\n//   EaseInBounce = 'EaseInBounce',\n//   EaseOutBounce = 'EaseOutBounce',\n//   EaseInOutBounce = 'EaseInOutBounce',\n// }\n\nexport default class Easing {\n  static linear(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return from + (change / duration) * currentTime\n  }\n  static easeInQuad(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return change * (currentTime /= duration) + from\n  }\n  static easeOutQuad(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return -change * (currentTime /= duration) * (currentTime - 2) + from\n  }\n  static easeInOutQuad(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    currentTime /= duration / 2\n    if (currentTime < 1) {\n      return (change / 2) * currentTime * currentTime + from\n    }\n    return (-change / 2) * (--currentTime * (currentTime - 2) - 1) + from\n  }\n\n  static easeInCubic(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return change * (currentTime /= duration) * currentTime * currentTime + from\n  }\n  static easeOutCubic(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return change * ((currentTime = currentTime / duration - 1) * currentTime * currentTime + 1) + from\n  }\n  static easeInOutCubic(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    currentTime /= duration / 2\n    if (currentTime < 1) {\n      return (change / 2) * currentTime * currentTime * currentTime + from\n    }\n    return (change / 2) * ((currentTime -= 2) * currentTime * currentTime + 2) + from\n  }\n\n  static easeInQuart(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return change * (currentTime /= duration) * currentTime * currentTime * currentTime + from\n  }\n  static easeOutQuart(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return (\n      -change * ((currentTime = currentTime / duration - 1) * currentTime * currentTime * currentTime - 1) +\n      from\n    )\n  }\n  static easeInOutQuart(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    currentTime /= duration / 2\n    if (currentTime < 1) {\n      return (change / 2) * currentTime * currentTime * currentTime * currentTime + from\n    }\n    return (-change / 2) * ((currentTime -= 2) * currentTime * currentTime * currentTime - 2) + from\n  }\n\n  static easeInQuint(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return change * (currentTime /= duration) * currentTime * currentTime * currentTime * currentTime + from\n  }\n  static easeOutQuint(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return (\n      change *\n        ((currentTime = currentTime / duration - 1) * currentTime * currentTime * currentTime * currentTime +\n          1) +\n      from\n    )\n  }\n  static easeInOutQuint(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    currentTime /= duration / 2\n    if (currentTime < 1) {\n      return (change / 2) * currentTime * currentTime * currentTime * currentTime * currentTime + from\n    }\n    return (\n      (change / 2) * ((currentTime -= 2) * currentTime * currentTime * currentTime * currentTime + 2) + from\n    )\n  }\n\n  static easeInSine(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return -change * Math.cos((currentTime / duration) * (Math.PI / 2)) + change + from\n  }\n  static easeOutSine(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return change * Math.sin((currentTime / duration) * (Math.PI / 2)) + from\n  }\n  static easeInOutSine(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return (-change / 2) * (Math.cos((Math.PI * currentTime) / duration) - 1) + from\n  }\n\n  static easeInExpo(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return currentTime === 0 ? from : change * Math.pow(2, 10 * (currentTime / duration - 1)) + from\n  }\n  static easeOutExpo(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return currentTime === duration\n      ? from + change\n      : change * (-Math.pow(2, (-10 * currentTime) / duration) + 1) + from\n  }\n  static easeInOutExpo(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    if (currentTime === 0) return from\n    if (currentTime === duration) return from + change\n    currentTime /= duration / 2\n    if (currentTime < 1) return (change / 2) * Math.pow(2, 10 * (currentTime - 1)) + from\n    return (change / 2) * (-Math.pow(2, -10 * --currentTime) + 2) + from\n  }\n\n  static easeInCirc(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return -change * (Math.sqrt(1 - (currentTime /= duration) * currentTime) - 1) + from\n  }\n  static easeOutCirc(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return change * Math.sqrt(1 - (currentTime = currentTime / duration - 1) * currentTime) + from\n  }\n  static easeInOutCirc(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    currentTime /= duration / 2\n    if (currentTime < 1) {\n      return (-change / 2) * (Math.sqrt(1 - currentTime * currentTime) - 1) + from\n    }\n    return (change / 2) * (Math.sqrt(1 - (currentTime -= 2) * currentTime) + 1) + from\n  }\n\n  static easeInElastic(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    let s = 1.70158\n    let p = 0\n    let a = change\n\n    if (currentTime === 0) return from\n\n    currentTime /= duration\n    if (currentTime === 1) return from + change\n    if (!p) p = duration * 0.3\n    if (a < Math.abs(change)) {\n      a = change\n      s = p / 4\n    } else s = (p / (2 * Math.PI)) * Math.asin(change / a)\n    return (\n      -(\n        a *\n        Math.pow(2, 10 * (currentTime -= 1)) *\n        Math.sin(((currentTime * duration - s) * (2 * Math.PI)) / p)\n      ) + from\n    )\n  }\n  static easeOutElastic(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    let s = 1.70158\n    let p = 0\n    let a = change\n    if (currentTime === 0) return from\n\n    currentTime /= duration\n    if (currentTime === 1) return from + change\n    if (!p) p = duration * 0.3\n    if (a < Math.abs(change)) {\n      a = change\n      s = p / 4\n    } else s = (p / (2 * Math.PI)) * Math.asin(change / a)\n    return (\n      a * Math.pow(2, -10 * currentTime) * Math.sin(((currentTime * duration - s) * (2 * Math.PI)) / p) +\n      change +\n      from\n    )\n  }\n  static easeInOutElastic(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    let s = 1.70158\n    let p = 0\n    let a = change\n    if (currentTime === 0) return from\n\n    currentTime /= duration / 2\n    if (currentTime === 2) return from + change\n    if (!p) p = duration * (0.3 * 1.5)\n    if (a < Math.abs(change)) {\n      a = change\n      s = p / 4\n    } else {\n      s = (p / (2 * Math.PI)) * Math.asin(change / a)\n    }\n    if (currentTime < 1)\n      return (\n        -0.5 *\n          (a *\n            Math.pow(2, 10 * (currentTime -= 1)) *\n            Math.sin(((currentTime * duration - s) * (2 * Math.PI)) / p)) +\n        from\n      )\n    return (\n      a *\n        Math.pow(2, -10 * (currentTime -= 1)) *\n        Math.sin(((currentTime * duration - s) * (2 * Math.PI)) / p) *\n        0.5 +\n      change +\n      from\n    )\n  }\n\n  static easeInBounce(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    return change - this.easeOutBounce(duration - currentTime, 0, change, duration) + from\n  }\n  static easeOutBounce(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    currentTime /= duration\n    if (currentTime < 1 / 2.75) {\n      return change * (7.5625 * currentTime * currentTime) + from\n    } else if (currentTime < 2 / 2.75) {\n      return change * (7.5625 * (currentTime -= 1.5 / 2.75) * currentTime + 0.75) + from\n    } else if (currentTime < 2.5 / 2.75) {\n      return change * (7.5625 * (currentTime -= 2.25 / 2.75) * currentTime + 0.9375) + from\n    } else {\n      return change * (7.5625 * (currentTime -= 2.625 / 2.75) * currentTime + 0.984375) + from\n    }\n  }\n  static easeInOutBounce(currentTime: number, from: number, to: number, duration: number): number {\n    const change = to - from\n    if (currentTime < duration / 2) {\n      return this.easeInBounce(currentTime * 2, 0, change, duration) * 0.5 + from\n    }\n    return this.easeOutBounce(currentTime * 2 - duration, 0, change, duration) * 0.5 + change * 0.5 + from\n  }\n}\n","// import { nextPowerOfTwo } from 'three/src/math/MathUtils'\n\nimport Easing from './easing'\n\nfunction randFloat(min: number, max: number) {\n  return min + Math.random() * (max - min)\n}\n\nclass ShuffleTextError extends Error {\n  constructor(message: string | undefined = undefined) {\n    const msg: string = message ? message : 'Failed to parse data'\n    super(msg)\n    this.name = 'BMFontLoaderError'\n    Object.setPrototypeOf(this, ShuffleTextError.prototype)\n  }\n}\n\nexport enum ShuffleState {\n  Idle = 0,\n  Updating,\n  Cancelled,\n  Completed,\n}\n\ninterface ShuffleCharCallback {\n  (index: number, state: ShuffleState): void\n}\n\nexport interface ShuffleTextCallback {\n  (text: string, state: ShuffleState): void\n}\n\nexport interface ShuffleRange {\n  min: number\n  max: number\n}\n\nexport interface ShuffleOption {\n  shuffleText: string\n  ignoreRegex?: RegExp\n  delay: ShuffleRange\n  fadeDuration: ShuffleRange\n  shuffleDuration: ShuffleRange\n  interval: ShuffleRange\n}\n\nclass ShuffleChar {\n  index: number\n\n  originalChar: string\n  currentChar: string\n\n  shuffleText: string\n  ignoreRegex?: RegExp\n\n  delay: number\n  shuffleDuration: number\n  fadeDuration: number\n  interval: number\n\n  timeUpdated: number = 0\n\n  opacity: number = 0\n  state: ShuffleState = ShuffleState.Idle\n\n  onCharStateChanged: ShuffleCharCallback\n\n  constructor(index: number, char: string, option: ShuffleOption, callback: ShuffleCharCallback) {\n    this.index = index\n    this.originalChar = char\n    this.shuffleText =\n      char === char.toLowerCase() ? option.shuffleText.toLocaleLowerCase() : option.shuffleText.toUpperCase()\n    this.ignoreRegex = option.ignoreRegex || /\\s|\\t|\\n|\\r|(\\n\\r)/\n    this.delay = randFloat(option.delay.min, option.delay.max)\n    this.fadeDuration = randFloat(option.fadeDuration.min, option.fadeDuration.max)\n    this.shuffleDuration = randFloat(option.shuffleDuration.min, option.shuffleDuration.max)\n    this.interval = randFloat(option.interval.min, option.interval.max)\n    this.onCharStateChanged = callback\n    if (this.ignoreRegex!.test(this.originalChar)) {\n      this.currentChar = this.originalChar\n    } else {\n      this.currentChar = this.shuffleText.charAt(Math.floor(Math.random() * this.shuffleText.length))\n    }\n  }\n\n  public start(time: number) {\n    this.state = ShuffleState.Updating\n    this.update(time)\n  }\n\n  public update(time: number) {\n    if (time < this.delay) {\n      return\n    }\n    if (time - this.timeUpdated < this.interval) return\n    const localTime = time - this.delay\n    switch (this.state) {\n      case ShuffleState.Idle:\n        break\n      case ShuffleState.Updating:\n        if (this.ignoreRegex!.test(this.originalChar)) {\n          this.currentChar = this.originalChar\n          return\n        }\n        if (localTime < this.shuffleDuration) {\n          this.currentChar = this.shuffleText.charAt(Math.floor(Math.random() * this.shuffleText.length))\n        } else {\n          this.currentChar = this.originalChar\n        }\n        if (localTime < this.fadeDuration) {\n          this.opacity = Easing.linear(localTime, 0, 1, this.fadeDuration)\n        }\n        /** If both effect is completed */\n        if (localTime >= this.fadeDuration && localTime >= this.fadeDuration) {\n          this.state = ShuffleState.Completed\n        } else {\n          this.onCharStateChanged(this.index, this.state)\n        }\n        break\n      case ShuffleState.Cancelled:\n        break\n      case ShuffleState.Completed:\n        this.currentChar = this.originalChar\n        this.opacity = 1.0\n        this.onCharStateChanged(this.index, this.state)\n        break\n      default:\n        break\n    }\n    this.timeUpdated = time\n  }\n\n  public cancel() {\n    this.state = ShuffleState.Cancelled\n    this.onCharStateChanged(this.index, this.state)\n  }\n}\n\nexport default class ShuffleText {\n  private _originalText: string = ''\n  private _currentText: string = ''\n\n  public get originalText(): string {\n    return this._originalText\n  }\n  public get currentText(): string {\n    return this._currentText\n  }\n\n  private _chars: Array<ShuffleChar> = []\n\n  // private _option: ShuffleOption | undefined\n\n  private _timeStart: number | undefined\n\n  private _numCompleted: number = 0\n  private _animationFrame: number = -1\n\n  private _state: ShuffleState = ShuffleState.Idle\n  public get state(): ShuffleState {\n    return this._state\n  }\n\n  private _textStateHandler: ShuffleTextCallback\n\n  constructor(text: string, option: ShuffleOption, textStateHandler: ShuffleTextCallback) {\n    if (text.length === 0) throw new ShuffleTextError('The `text` argument must not be empty.')\n    if (option.shuffleText.length === 0)\n      throw new ShuffleTextError('The `option.delay.shuffleText` must not be empty.')\n    if (option.delay.min > option.delay.max)\n      throw new ShuffleTextError(\n        'The `option.delay.max` must be greater than or equal to `option.delay.min`.'\n      )\n    if (option.fadeDuration.min > option.fadeDuration.max)\n      throw new ShuffleTextError(\n        'The `option.fadeDuration.max` must be greater than or equal to `option.fadeDuration.min`.'\n      )\n    if (option.shuffleDuration.min > option.shuffleDuration.max)\n      throw new ShuffleTextError(\n        'The `option.shuffleDuration.max` must be greater than or equal to `option.shuffleDuration.min`.'\n      )\n    if (option.interval.min > option.interval.max)\n      throw new ShuffleTextError(\n        'The `option.interval.max` must be greater than or equal to `option.interval.min`.'\n      )\n    /* Set variables */\n    this._originalText = text\n    this._currentText = ''\n    option.shuffleText = option.shuffleText\n      .split('')\n      .filter((char: string, index: number, arr: string[]) => arr.indexOf(char) === index)\n      .join('')\n      .replaceAll(/\\s|\\t|\\n|\\r|(\\n\\r)/gi, '')\n    this._textStateHandler = textStateHandler\n    /* Create character set */\n    const letters: Array<string> = this._originalText.split('')\n    for (var i = 0; i < letters.length; i++) {\n      const letter = letters[i]\n      const char: ShuffleChar = new ShuffleChar(i, letter, option, this._onCharStateChanged.bind(this))\n      this._chars.push(char)\n    }\n  }\n\n  public start() {\n    if (this._state !== ShuffleState.Idle) return\n    this._state = ShuffleState.Updating\n    this._timeStart = performance.now()\n    const timeDiff = 0\n    for (var i = 0; i < this._chars.length; i++) this._chars[i].start(timeDiff)\n    this._update()\n  }\n\n  private _update() {\n    if (this._state !== ShuffleState.Updating) return\n    const timeDiff = performance.now() - this._timeStart!\n    for (var i = 0; i < this._chars.length; i++) this._chars[i].update(timeDiff)\n    this._currentText = this._chars.map((char: ShuffleChar) => char.currentChar).join('')\n    if (this._state !== ShuffleState.Updating) return\n    this._textStateHandler(this.currentText, this._state)\n    this._animationFrame = requestAnimationFrame(this._update.bind(this))\n  }\n\n  public cancel() {\n    if (this._state !== ShuffleState.Updating) return\n    this._state = ShuffleState.Cancelled\n    for (var i = 0; i < this._chars.length; i++) this._chars[i].cancel()\n    this._currentText = this._chars.map((char: ShuffleChar) => char.currentChar).join('')\n    this._textStateHandler(this.currentText, this._state)\n    cancelAnimationFrame(this._animationFrame)\n  }\n\n  private _onCharStateChanged(index: number, state: ShuffleState) {\n    switch (state) {\n      case ShuffleState.Idle:\n      case ShuffleState.Updating:\n      case ShuffleState.Cancelled:\n        break\n      case ShuffleState.Completed:\n        if (this._state !== ShuffleState.Updating) return\n        this._numCompleted++\n        if (this._chars.length <= this._numCompleted) {\n          cancelAnimationFrame(this._animationFrame)\n          this._chars = []\n          this._currentText = this._originalText\n          this._state = ShuffleState.Completed\n          this._textStateHandler(this.currentText, this._state)\n        }\n        break\n      default:\n        break\n    }\n  }\n}\n","import * as THREE from 'three'\nimport TextGeometry, { TextAlign } from 'three-text-geometry'\nimport ShuffleText, { ShuffleOption, ShuffleState } from './effects/shuffle'\nimport DemoBase from './DemoBase'\n\nexport class DemoShuffle extends DemoBase {\n  shuffleTimeoutID?: any\n  shuffle?: ShuffleText\n\n  componentWillUnmount() {\n    this.shuffle?.cancel()\n    clearTimeout(this.shuffleTimeoutID)\n    cancelAnimationFrame(this.animationFrameID)\n  }\n\n  initScene() {\n    super.initScene()\n\n    /** TextGeometryOption */\n    this.textOption = {\n      font: this.font,\n      align: TextAlign.Left,\n      width: 1600,\n      flipY: this.textures[0].flipY,\n    }\n\n    /** Text Mesh */\n    const textGeometry = new TextGeometry(this.staticText(), this.textOption)\n    const box = new THREE.Vector3()\n    textGeometry.computeBoundingBox()\n    textGeometry.boundingBox?.getSize(box)\n    const textMaterial = new THREE.MeshBasicMaterial({\n      map: this.textures[0],\n      side: THREE.DoubleSide,\n      transparent: true,\n      color: 0x666666\n    })\n    this.textMesh = new THREE.Mesh(textGeometry, textMaterial)\n    this.textMesh.scale.multiply(new THREE.Vector3(1, -1, 1))\n    this.textMesh.position.set(-box.x / 2, -box.y / 2, 0)\n    this.scene?.add(this.textMesh)\n\n    /** Shuffle text */\n    this.shuffleText(1000)\n  }\n\n  shuffleText(timeout: number) {\n    const option: ShuffleOption = {\n      shuffleText: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',\n      ignoreRegex: /\\s|\\t|\\n|\\r|(\\n\\r|\\.|,)/,\n      delay: { min: 0, max: 0 },\n      fadeDuration: { min: 500, max: 700 },\n      shuffleDuration: { min: 1000, max: 2000 },\n      interval: { min: 20, max: 40 }\n    }\n    const self = this\n    this.shuffle?.cancel()\n    this.shuffle = new ShuffleText(this.staticText(), option, (text: string, state: ShuffleState) => {\n      const geom = this.textMesh?.geometry as TextGeometry\n      geom.update(text)\n      if (state === ShuffleState.Completed) self.shuffleText(3000)\n    })\n    clearTimeout(this.shuffleTimeoutID)\n    this.shuffleTimeoutID = setTimeout(() => {\n      self.shuffle?.start()\n    }, timeout)\n  }\n}\n\nexport default DemoShuffle\n","const snoise = `\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\n`\n\nconst asstep = `\nfloat aastep(float threshold, float value) {\n    #ifdef GL_OES_standard_derivatives\n    float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;\n    return smoothstep(threshold-afwidth, threshold+afwidth, value);\n    #else\n    return step(threshold, value);\n    #endif\n}\n`\n\nexport const fragmentShader = `\n#extension GL_OES_standard_derivatives : enable\nprecision highp float;\n\nuniform float opacity;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float iGlobalTime;\nuniform float animate;\nvarying vec2 vUv;\nvarying float vLine;\n\n${snoise}\n${asstep}\n\nvoid main() {\n  vec4 texColor = texture2D(map, vUv);\n  float sdf = texColor.a;\n  \n  float alpha = 0.0;\n  float animValue = pow(abs(animate * 2.0 - 1.0), 12.0 - vLine * 5.0);\n  float threshold = animValue * 0.5 + 0.5;\n  float mult = 3.0;\n  alpha += 0.15 * aastep(threshold, sdf + 0.4 * snoise(vec3(vUv * 10.0, iGlobalTime)) * mult);\n  alpha += 0.35 * aastep(threshold, sdf + 0.1 * snoise(vec3(vUv * 50.0, iGlobalTime)) * mult);\n  alpha += 0.15 * aastep(threshold, sdf);\n\n  gl_FragColor = vec4(color, alpha);\n}\n`\nexport const vertexShader = `\nattribute vec4 position;\nattribute vec2 uv;\nattribute float line;\nuniform mat4 projectionMatrix;\nuniform mat4 modelViewMatrix;\nvarying vec2 vUv;\nvarying float vLine;\n\nvoid main() {\n  vLine = line;\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * position;\n}\n`\n","import * as THREE from 'three'\nimport TextGeometry, { TextAlign } from 'three-text-geometry'\nimport DemoBase from './DemoBase'\nimport { fragmentShader, vertexShader } from './shaders/effect'\n\nexport class DemoShader extends DemoBase {\n  swapTimeoutID?: any\n  time: number = 0\n  textMaterial?: THREE.Material\n  clock: THREE.Clock = new THREE.Clock();\n  \n  componentWillUnmount() {\n    clearTimeout(this.swapTimeoutID)\n    cancelAnimationFrame(this.animationFrameID)\n    this.clock?.stop()\n  }\n\n  initScene() {\n    super.initScene()\n\n    /** TextGeometryOption */\n    this.textOption = {\n      font: this.font,\n      align: TextAlign.Left,\n      width: 1600,\n      flipY: this.textures[0].flipY,\n    }\n\n    /** Geometry */\n    const textGeometry = new TextGeometry(this.staticText(), this.textOption)\n    const box = new THREE.Vector3()\n    textGeometry.computeBoundingBox()\n    textGeometry.boundingBox?.getSize(box)\n    /** Material */\n    this.textMaterial = new THREE.RawShaderMaterial({\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n      uniforms: {\n        animate: { value: 1 },\n        iGlobalTime: { value: 0 },\n        map: { value: this.textures[0] },\n        color: { value: new THREE.Color(0x666666) },\n      },\n      transparent: true,\n      side: THREE.DoubleSide,\n      depthTest: false\n    })\n    this.textMaterial.side = THREE.DoubleSide\n    this.textMesh = new THREE.Mesh(textGeometry, this.textMaterial)\n    this.textMesh.scale.multiply(new THREE.Vector3(1, -1, 1))\n    this.textMesh.position.set(-box.x / 2, -box.y / 2, 0)\n    this.scene?.add(this.textMesh)\n\n    this.clock.start()\n  }\n\n  updateScene(): void {\n    const dt = this.clock.getDelta()\n    const duration = 3\n    this.time += dt\n    const mat = this.textMaterial as THREE.RawShaderMaterial\n    mat.uniforms.iGlobalTime.value = this.time\n    mat.uniforms.animate.value = this.time / duration\n    mat.needsUpdate = true\n    if (this.time > duration) {\n      this.time = 0\n      this.swapText()\n    }\n    super.updateScene()\n  }\n\n  swapText() {\n    const geom = this.textMesh?.geometry as TextGeometry\n    geom.update(this.randomText())\n    const box = new THREE.Vector3()\n    this.textMesh!.geometry.computeBoundingBox()\n    this.textMesh!.geometry.boundingBox?.getSize(box)\n    this.textMesh!.position.set(-box.x / 2, -box.y / 2, 0)\n  }\n}\n\nexport default DemoShader\n","import * as THREE from 'three'\nimport TextGeometry, { TextAlign } from 'three-text-geometry'\nimport ShuffleText, { ShuffleOption, ShuffleState } from './effects/shuffle'\nimport DemoBase from './DemoBase'\nimport { fragmentShader, vertexShader } from './shaders/effect'\n\nexport class DemoShuffleShader extends DemoBase {\n  shuffle?: ShuffleText\n  swapTimeoutID?: any\n  time: number = 0\n  textMaterial?: THREE.Material\n  clock: THREE.Clock = new THREE.Clock();\n  \n  componentWillUnmount() {\n    this.shuffle?.cancel()\n    cancelAnimationFrame(this.animationFrameID)\n  }\n\n  initScene() {\n    super.initScene()\n\n    /** TextGeometryOption */\n    this.textOption = {\n      font: this.font,\n      align: TextAlign.Left,\n      width: 1600,\n      flipY: this.textures[0].flipY,\n    }\n\n    /** Geometry */\n    const textGeometry = new TextGeometry(this.staticText(), this.textOption)\n    const box = new THREE.Vector3()\n    textGeometry.computeBoundingBox()\n    textGeometry.boundingBox?.getSize(box)\n    /** Material */\n    this.textMaterial = new THREE.RawShaderMaterial({\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n      uniforms: {\n        animate: { value: 1 },\n        iGlobalTime: { value: 0 },\n        map: { value: this.textures[0] },\n        color: { value: new THREE.Color(0x666666) },\n      },\n      transparent: true,\n      side: THREE.DoubleSide,\n      depthTest: false\n    })\n    this.textMaterial.side = THREE.DoubleSide\n    this.textMesh = new THREE.Mesh(textGeometry, this.textMaterial)\n    this.textMesh.scale.multiply(new THREE.Vector3(1, -1, 1))\n    this.textMesh.position.set(-box.x / 2, -box.y / 2, 0)\n    this.scene?.add(this.textMesh)\n\n    this.clock.start()\n  }\n\n  updateScene(): void {\n    const dt = this.clock.getDelta()\n    const duration = 5\n    this.time += dt\n    const mat = this.textMaterial as THREE.RawShaderMaterial\n    mat.uniforms.iGlobalTime.value = this.time\n    mat.uniforms.animate.value = this.time / duration\n    mat.needsUpdate = true\n    if (this.time > duration) {\n      this.time = 0\n      this.shuffleText()\n    }\n    super.updateScene()\n  }\n\n  shuffleText() {\n    const option: ShuffleOption = {\n      shuffleText: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',\n      ignoreRegex: /\\s|\\t|\\n|\\r|(\\n\\r|\\.|,)/,\n      delay: { min: 0, max: 0 },\n      fadeDuration: { min: 500, max: 700 },\n      shuffleDuration: { min: 1000, max: 2500 },\n      interval: { min: 20, max: 60 },\n    }\n    const self = this\n    this.shuffle?.cancel()\n    this.shuffle = new ShuffleText(this.staticText(), option, (text: string, state: ShuffleState) => {\n      const geom = this.textMesh?.geometry as TextGeometry\n      geom.update(text)\n    })\n    self.shuffle?.cancel()\n    self.shuffle?.start()\n  }\n}\n\nexport default DemoShuffleShader\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals'\nimport Navigation from './Navigation'\nimport DemoMultipage from './DemoMultipage'\nimport DemoSimple from './DemoSimple'\nimport DemoShuffle from './DemoShuffle'\nimport DemoShader from './DemoShader'\nimport DemoShuffleShader from './DemoShuffleShader'\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Navigation />\n      <Routes>\n        <Route path=\"*\" element={<Navigate to=\"/simple\" />} />\n        <Route path=\"/simple\" element={<DemoSimple />} />\n        <Route path=\"/multipage\" element={<DemoMultipage />} />\n        <Route path=\"/shuffle\" element={<DemoShuffle />} />\n        <Route path=\"/shader\" element={<DemoShader />} />\n        <Route path=\"/shuffleshader\" element={<DemoShuffleShader />} />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","function bounds(positions) {\n    const itemSize = 2;\n    const box = { min: [0, 0], max: [0, 0] };\n    if (!positions[0] || !positions[1])\n        return box;\n    const count = positions.length / itemSize;\n    box.min[0] = positions[0];\n    box.min[1] = positions[1];\n    box.max[0] = positions[0];\n    box.max[1] = positions[1];\n    for (let i = 0; i < count; i++) {\n        const x = positions[i * itemSize + 0];\n        const y = positions[i * itemSize + 1];\n        if (!x || !y)\n            continue;\n        box.min[0] = Math.min(x, box.min[0]);\n        box.min[1] = Math.min(y, box.min[1]);\n        box.max[0] = Math.max(x, box.max[0]);\n        box.max[1] = Math.max(y, box.max[1]);\n    }\n    return box;\n}\nfunction computeBox(positions, output) {\n    const box = bounds(positions);\n    if (!box.min[0] || !box.min[1] || !box.max[0] || !box.max[1])\n        return;\n    output.min.set(box.min[0], box.min[1], 0);\n    output.max.set(box.max[0], box.max[1], 0);\n}\nfunction computeSphere(positions, output) {\n    const box = bounds(positions);\n    if (!box.min[0] || !box.min[1] || !box.max[0] || !box.max[1])\n        return;\n    const minX = box.min[0];\n    const minY = box.min[1];\n    const maxX = box.max[0];\n    const maxY = box.max[1];\n    const width = maxX - minX;\n    const height = maxY - minY;\n    const length = Math.sqrt(width * width + height * height);\n    output.center.set(minX + width / 2, minY + height / 2, 0);\n    output.radius = length / 2;\n}\nexport { computeBox, computeSphere };\n//# sourceMappingURL=compute.js.map","function extractPages(glyphs) {\n    const pages = new Float32Array(glyphs.length * 4 * 1);\n    let i = 0;\n    glyphs.forEach(function (glyph) {\n        const id = glyph.data.page || 0;\n        pages[i++] = id;\n        pages[i++] = id;\n        pages[i++] = id;\n        pages[i++] = id;\n    });\n    return pages;\n}\nfunction extractUVs(glyphs, texWidth, texHeight, flipY) {\n    const uvs = new Float32Array(glyphs.length * 4 * 2);\n    let i = 0;\n    glyphs.forEach(function (glyph) {\n        const bitmap = glyph.data;\n        const bw = bitmap.x + bitmap.width;\n        const bh = bitmap.y + bitmap.height;\n        /** top left position */\n        const u0 = bitmap.x / texWidth;\n        let v1 = bitmap.y / texHeight;\n        const u1 = bw / texWidth;\n        let v0 = bh / texHeight;\n        if (flipY) {\n            v1 = (texHeight - bitmap.y) / texHeight;\n            v0 = (texHeight - bh) / texHeight;\n        }\n        /** BL */\n        uvs[i++] = u0;\n        uvs[i++] = v1;\n        /** TL */\n        uvs[i++] = u0;\n        uvs[i++] = v0;\n        /** TR */\n        uvs[i++] = u1;\n        uvs[i++] = v0;\n        /** BR */\n        uvs[i++] = u1;\n        uvs[i++] = v1;\n    });\n    return uvs;\n}\nfunction extractPositions(glyphs) {\n    const positions = new Float32Array(glyphs.length * 4 * 2);\n    let i = 0;\n    glyphs.forEach(function (glyph) {\n        const bitmap = glyph.data;\n        /** bottom left position */\n        const x = glyph.position[0] + bitmap.xoffset;\n        const y = glyph.position[1] + bitmap.yoffset;\n        /** quad size */\n        const w = bitmap.width;\n        const h = bitmap.height;\n        /** BL */\n        positions[i++] = x;\n        positions[i++] = y;\n        /** TL */\n        positions[i++] = x;\n        positions[i++] = y + h;\n        /** TR */\n        positions[i++] = x + w;\n        positions[i++] = y + h;\n        /** BR */\n        positions[i++] = x + w;\n        positions[i++] = y;\n    });\n    return positions;\n}\nexport { extractPages, extractPositions, extractUVs };\n//# sourceMappingURL=vertices.js.map","/* eslint @typescript-eslint/unbound-method: 0 */\nfunction dtype(dtype) {\n    switch (dtype) {\n        case 'int8':\n            return Int8Array;\n        case 'int16':\n            return Int16Array;\n        case 'int32':\n            return Int32Array;\n        case 'uint8':\n            return Uint8Array;\n        case 'uint16':\n            return Uint16Array;\n        case 'uint32':\n            return Uint32Array;\n        case 'float32':\n            return Float32Array;\n        case 'float64':\n            return Float64Array;\n        case 'uint8_clamped':\n            return Uint8ClampedArray;\n        case 'array':\n            return Array;\n    }\n    return undefined;\n}\nexport { dtype };\n//# sourceMappingURL=binary.js.map","/**\n *\n * https://github.com/Jam3/parse-bmfont-binary\n *\n */\nimport { BMFontLoaderError, BMFontLoaderErrorType } from \"../error\";\nimport { DefaultBMFont, DefaultBMFontCommon, DefaultBMFontInfo, DefaultBMFontKern, } from \"../types\";\nclass BMFontBinaryParser {\n    parse(buf) {\n        if (buf.length < 6)\n            throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, 'Invalid buffer length for BMFont');\n        const header = BMFontBinaryParser.HEADER.every((byte, i) => {\n            return buf.readUInt8(i) === byte;\n        });\n        if (!header)\n            throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, 'BMFont missing BMF byte header');\n        let i = 3;\n        const vers = buf.readUInt8(i++);\n        if (vers > 3)\n            throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, 'Only supports BMFont Binary v3 (BMFont App v1.10)');\n        const target = DefaultBMFont();\n        for (let b = 0; b < 5; b++)\n            i += this.readBlock(target, buf, i);\n        return target;\n    }\n    readBlock(target, buf, i) {\n        if (i > buf.length - 1)\n            return 0;\n        const blockID = buf.readUInt8(i++);\n        const blockSize = buf.readInt32LE(i);\n        i += 4;\n        switch (blockID) {\n            case 1:\n                target.info = this.readInfo(buf, i);\n                break;\n            case 2:\n                target.common = this.readCommon(buf, i);\n                break;\n            case 3:\n                target.pages = this.readPages(buf, i, blockSize);\n                break;\n            case 4:\n                target.chars = this.readChars(buf, i, blockSize);\n                break;\n            case 5:\n                target.kernings = this.readKernings(buf, i, blockSize);\n                break;\n        }\n        return 5 + blockSize;\n    }\n    readInfo(buf, i) {\n        const info = DefaultBMFontInfo();\n        info.size = buf.readInt16LE(i);\n        const bitField = buf.readUInt8(i + 2);\n        info.smooth = (bitField >> 7) & 1;\n        info.unicode = (bitField >> 6) & 1;\n        info.italic = (bitField >> 5) & 1;\n        info.bold = (bitField >> 4) & 1;\n        /** fixedHeight is only mentioned in binary spec */\n        if ((bitField >> 3) & 1)\n            info.fixedHeight = 1;\n        // info.charset = buf.readUInt8(i + 3) || ''; /** TODO: Array? or String? */\n        info.stretchH = buf.readUInt16LE(i + 4);\n        info.aa = buf.readUInt8(i + 6);\n        info.padding = [buf.readInt8(i + 7), buf.readInt8(i + 8), buf.readInt8(i + 9), buf.readInt8(i + 10)];\n        info.spacing = [buf.readInt8(i + 11), buf.readInt8(i + 12)];\n        info.outline = buf.readUInt8(i + 13);\n        info.face = this.readStringNT(buf, i + 14);\n        return info;\n    }\n    readCommon(buf, i) {\n        const common = DefaultBMFontCommon();\n        common.lineHeight = buf.readUInt16LE(i);\n        common.base = buf.readUInt16LE(i + 2);\n        common.scaleW = buf.readUInt16LE(i + 4);\n        common.scaleH = buf.readUInt16LE(i + 6);\n        common.pages = buf.readUInt16LE(i + 8);\n        // const bitField = buf.readUInt8(i + 10);\n        common.packed = 0;\n        common.alphaChnl = buf.readUInt8(i + 11);\n        common.redChnl = buf.readUInt8(i + 12);\n        common.greenChnl = buf.readUInt8(i + 13);\n        common.blueChnl = buf.readUInt8(i + 14);\n        return common;\n    }\n    readPages(buf, i, size) {\n        const pages = [];\n        const text = this.readNameNT(buf, i);\n        const len = text.length + 1;\n        const count = size / len;\n        for (let c = 0; c < count; c++) {\n            pages[c] = buf.slice(i, i + text.length).toString('utf8');\n            i += len;\n        }\n        return pages;\n    }\n    readChars(buf, i, blockSize) {\n        const chars = [];\n        const count = blockSize / 20;\n        for (let c = 0; c < count; c++) {\n            const char = {\n                id: 0,\n                index: 0,\n                char: '',\n                width: 0,\n                height: 0,\n                xoffset: 0,\n                yoffset: 0,\n                xadvance: 0,\n                chnl: 0,\n                x: 0,\n                y: 0,\n                page: 0,\n            };\n            const off = c * 20;\n            char.id = buf.readUInt32LE(i + 0 + off);\n            char.x = buf.readUInt16LE(i + 4 + off);\n            char.y = buf.readUInt16LE(i + 6 + off);\n            char.width = buf.readUInt16LE(i + 8 + off);\n            char.height = buf.readUInt16LE(i + 10 + off);\n            char.xoffset = buf.readInt16LE(i + 12 + off);\n            char.yoffset = buf.readInt16LE(i + 14 + off);\n            char.xadvance = buf.readInt16LE(i + 16 + off);\n            char.page = buf.readUInt8(i + 18 + off);\n            char.chnl = buf.readUInt8(i + 19 + off);\n            chars[c] = char;\n        }\n        return chars;\n    }\n    readKernings(buf, i, blockSize) {\n        const kernings = [];\n        const count = blockSize / 10;\n        for (let c = 0; c < count; c++) {\n            const kern = DefaultBMFontKern();\n            const off = c * 10;\n            kern.first = buf.readUInt32LE(i + 0 + off);\n            kern.second = buf.readUInt32LE(i + 4 + off);\n            kern.amount = buf.readInt16LE(i + 8 + off);\n            kernings[c] = kern;\n        }\n        return kernings;\n    }\n    readStringNT(buf, offset) {\n        return this.readNameNT(buf, offset).toString('utf8');\n    }\n    readNameNT(buf, offset) {\n        let pos = offset;\n        for (; pos < buf.length; pos++) {\n            if (buf[pos] === 0x00)\n                break;\n        }\n        return buf.slice(offset, pos);\n    }\n}\nBMFontBinaryParser.HEADER = [66, 77, 70];\nexport { BMFontBinaryParser };\n//# sourceMappingURL=BMFontBinaryParser.js.map","import Ajv from 'ajv';\nimport { BMFontLoaderError, BMFontLoaderErrorType } from \"../error\";\nimport schema from './BMFontJsonSchema.json';\n/**\n * # How to create a json schema\n * npm install -g quicktype\n * quicktype ./src/types/BMFont.ts -o ./src/parser/BMFontJsonSchema.json --lang schema\n */\nclass BMFontJsonParser {\n    parse(json) {\n        try {\n            if (typeof json === 'string')\n                json = JSON.parse(json);\n            const ajv = new Ajv();\n            const validate = ajv.compile(schema);\n            const valid = validate(json);\n            if (valid) {\n                return json;\n            }\n            else {\n                throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, 'Invalid json data');\n            }\n        }\n        catch (error) {\n            throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, error.message);\n        }\n    }\n}\nexport { BMFontJsonParser };\n//# sourceMappingURL=BMFontJsonParser.js.map","import { XMLParser } from 'fast-xml-parser';\nimport { BMFontLoaderError, BMFontLoaderErrorType } from \"../error\";\n/**\n * # How to create a json schema\n * npm install -g quicktype\n * quicktype ./src/types/BMFont.ts -o ./src/parser/BMFontJsonSchema.json --lang schema\n */\nclass BMFontXMLParser {\n    parse(xml) {\n        try {\n            const options = {\n                ignoreAttributes: false,\n                attributeNamePrefix: '',\n            };\n            const parser = new XMLParser(options);\n            const json = parser.parse(xml);\n            const font = json.font;\n            if (!font)\n                throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, 'No font data in BMFont file');\n            if (!font.pages)\n                throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, 'No font data in BMFont file');\n            if (!font.chars)\n                throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, 'No chars data in BMFont file');\n            if (!font.info)\n                throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, 'No info data in BMFont file');\n            if (!font.common)\n                throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, 'No common data in BMFont file');\n            // console.log('font.pages.page', font.pages.page);\n            let pages;\n            if (Array.isArray(font.pages.page)) {\n                pages = font.pages.page.map((element) => element.file);\n            }\n            else {\n                pages = [font.pages.page.file];\n            }\n            // console.log('pages', pages);\n            const chars = font.chars.char.map((element) => element);\n            // console.log('chars', chars);\n            const info = {\n                face: font.info.face,\n                size: +font.info.size || 0,\n                bold: +font.info.bold || 0,\n                italic: +font.info.italic || 0,\n                charset: font.info.charset.split(',').filter((element) => element != ''),\n                unicode: +font.info.unicode || 0,\n                stretchH: +font.info.stretchH || 0,\n                smooth: +font.info.smooth || 0,\n                aa: +font.info.aa || 0,\n                padding: font.info.padding.split(',').map((element) => +element),\n                spacing: font.info.spacing.split(',').map((element) => +element),\n                fixedHeight: +font.info.fixedHeight || 0,\n                outline: +font.info.outline || 0,\n            };\n            // console.log('info', info);\n            const common = {\n                lineHeight: +font.common.lineHeight || 0,\n                base: +font.common.base || 0,\n                scaleW: +font.common.scaleW || 0,\n                scaleH: +font.common.scaleH || 0,\n                pages: +font.common.pages || 0,\n                packed: +font.common.packed || 0,\n                alphaChnl: +font.common.alphaChnl || 0,\n                redChnl: +font.common.redChnl || 0,\n                greenChnl: +font.common.greenChnl || 0,\n                blueChnl: +font.common.blueChn || 0,\n            };\n            // console.log('common', common);\n            const kernings = font.kernings.kerning.map((element) => ({\n                first: +element.first || 0,\n                second: +element.second || 0,\n                amount: +element.amount || 0,\n            }));\n            // console.log('kernings', kernings);\n            const distanceField = {\n                fieldType: font.distanceField.fieldType,\n                distanceRange: +font.distanceField.distanceRange || 0,\n            };\n            // console.log('distanceField', distanceField);\n            const bmFont = {\n                pages: pages,\n                chars: chars,\n                info: info,\n                common: common,\n                kernings: kernings,\n                distanceField: distanceField,\n            };\n            return bmFont;\n        }\n        catch (error) {\n            // console.error(error);\n            throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, error.message);\n        }\n    }\n}\nexport { BMFontXMLParser };\n//# sourceMappingURL=BMFontXMLParser.js.map","import { BMFontLoaderError, BMFontLoaderErrorType } from \"../error\";\nimport { DefaultBMFont, DefaultBMFontCommon, DefaultBMFontInfo, } from \"../types\";\n/**\n * # How to create a json schema\n * npm install -g quicktype\n * quicktype ./src/types/BMFont.ts -o ./src/parser/BMFontJsonSchema.json --lang schema\n */\nclass BMFontAsciiParser {\n    parse(data) {\n        data = data.trim();\n        const lines = data.split(/\\r\\n?|\\n/g);\n        if (lines.length === 0)\n            throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, 'No data in BMFont file');\n        const result = DefaultBMFont();\n        lines.forEach((line, idx) => {\n            line = line.replace(/[\\s\\t]+/g, ' ').trim();\n            if (!line)\n                return;\n            const space = line.indexOf(' ');\n            if (space === -1)\n                throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, 'No page data');\n            const rootKey = line.substring(0, space);\n            const keyValues = {};\n            line\n                .substring(space + 1)\n                .replace(/[\\s\\t]+/g, ' ')\n                .split(' ')\n                .forEach((str) => {\n                const arr = str.split('=');\n                const key = arr[0];\n                const value = arr[1];\n                if (/^-?\\d+\\.?\\d*$/.test(value))\n                    keyValues[key] = +value;\n                else if (/^[\\d,]+/.test(value))\n                    keyValues[key] = value.split(',').map((value) => +value);\n                else if (/^(\"|').*(\"|')$/.test(value))\n                    keyValues[key] = value.replace(/^(\"|')(.*)(\"|')$/g, '$2');\n                else\n                    keyValues[key] = value;\n            });\n            switch (rootKey) {\n                case 'info':\n                    result.info = keyValues;\n                    break;\n                case 'common':\n                    result.common = keyValues;\n                    break;\n                case 'distanceField':\n                    result.distanceField = keyValues;\n                    break;\n                case 'page':\n                    result.pages.push(keyValues.file);\n                    break;\n                case 'chars':\n                    break;\n                case 'char':\n                    result.chars.push(keyValues);\n                    break;\n                case 'kernings':\n                    break;\n                case 'kerning':\n                    result.kernings.push(keyValues);\n                    break;\n                default:\n                    break;\n            }\n        });\n        if (JSON.stringify(result.info) === JSON.stringify(DefaultBMFontInfo()))\n            throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, `No info data. \\n${JSON.stringify(result)}`);\n        if (JSON.stringify(result.common) === JSON.stringify(DefaultBMFontCommon()))\n            throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, `No common data. \\n${JSON.stringify(result)}`);\n        if (result.pages.length == 0)\n            throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, `No page data. \\n${JSON.stringify(result)}`);\n        if (result.chars.length == 0)\n            throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, `No char data. \\n${JSON.stringify(result)}`);\n        // if (result.kernings.length == 0)\n        //     throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError, `No kernings data. \\n${JSON.stringify(result)}`);\n        // console.log(result);\n        return result;\n    }\n}\nexport { BMFontAsciiParser };\n//# sourceMappingURL=BMFontAsciiParser.js.map","/* eslint @typescript-eslint/no-empty-function: 0 */\n/* eslint @typescript-eslint/no-explicit-any: 0 */\n/* eslint @typescript-eslint/no-unsafe-member-access: 0 */\n/* eslint @typescript-eslint/no-unsafe-call: 0 */\n/* eslint @typescript-eslint/no-unsafe-argument: 0 */\nimport axios from 'axios';\nimport { BMFontLoaderError, BMFontLoaderErrorType } from \"../error\";\nimport { BMFontAsciiParser, BMFontBinaryParser, BMFontJsonParser, BMFontXMLParser } from \"../parser\";\nclass BMFontLoader {\n    constructor() { }\n    loadJson(uri, config = undefined) {\n        return new Promise((resolve, reject) => {\n            axios\n                .get(uri, config)\n                .then((response) => {\n                resolve(new BMFontJsonParser().parse(response.data));\n            })\n                .catch((error) => {\n                reject(new BMFontLoaderError(BMFontLoaderErrorType.LoadError, error.message));\n            });\n        });\n    }\n    loadXML(uri, config = undefined) {\n        return new Promise((resolve, reject) => {\n            axios\n                .get(uri, config)\n                .then((response) => {\n                resolve(new BMFontXMLParser().parse(response.data.toString()));\n            })\n                .catch((error) => {\n                reject(new BMFontLoaderError(BMFontLoaderErrorType.LoadError, error.message));\n            });\n        });\n    }\n    loadAscii(uri, config = undefined) {\n        return new Promise((resolve, reject) => {\n            axios\n                .get(uri, config)\n                .then((response) => {\n                resolve(new BMFontAsciiParser().parse(response.data.toString()));\n            })\n                .catch((error) => {\n                reject(new BMFontLoaderError(BMFontLoaderErrorType.LoadError, error.message));\n            });\n        });\n    }\n    loadBinary(uri, config = undefined) {\n        return new Promise((resolve, reject) => {\n            axios\n                .get(uri, config)\n                .then((response) => {\n                const data = typeof response.data === 'string'\n                    ? Buffer.from(response.data, 'binary')\n                    : response.data;\n                resolve(new BMFontBinaryParser().parse(data));\n            })\n                .catch((error) => {\n                reject(new BMFontLoaderError(BMFontLoaderErrorType.LoadError, error.message));\n            });\n        });\n    }\n}\nexport { BMFontLoader };\n//# sourceMappingURL=loader.js.map"],"sourceRoot":""}