Object.defineProperty(exports,"__esModule",{value:!0}),exports.useFont=void 0;let tslib_1=require("tslib"),axios_1=tslib_1.__importDefault(require("axios")),swr_1=tslib_1.__importDefault(require("swr")),three_1=require("three"),parser_1=require("../parser"),useFont=(t,e,s)=>{let n=new Array(2).fill(0),o=new Array(2).fill(0),l=0,u=0,i=0,d=0,_=(e,r,a)=>{n[e]=r,o[e]=a,l=n.reduce((e,r)=>e+r,0),u=o.reduce((e,r)=>e+r,0),0!==l&&0!==u&&(i=Math.round(100*l/u),null!=s)&&s(l,u,i)};var{data:r,isLoading:a}=(0,swr_1.default)(t,e=>(async(e,a)=>axios_1.default.get(e,{onDownloadProgress:async e=>{_(a,e.loaded,null!=(e=e.total)?e:0)}}).then(async e=>{d++,_(a,o[a],o[a]);var r=e.data;switch(null==(e=t.split(".").pop())?void 0:e.toLowerCase()){case"xml":return(new parser_1.BMFontXMLParser).parse(r);case"bin":return(new parser_1.BMFontBinaryParser).parse(Buffer.from(r,"utf-8"));case"json":return(new parser_1.BMFontJsonParser).parse(r);default:return(new parser_1.BMFontAsciiParser).parse(r)}}))(e,0)),{data:e,isLoading:p}=(0,swr_1.default)(e,e=>(async(e,r)=>axios_1.default.get(e,{onDownloadProgress:async e=>{_(r,e.loaded,null!=(e=e.total)?e:0)}}).then(async e=>(d++,_(r,o[r],o[r]),(new three_1.TextureLoader).load(e.data))))(e,1));return{font:r,texture:e,isLoading:a||p}};exports.useFont=useFont;