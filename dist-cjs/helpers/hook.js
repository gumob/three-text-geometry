Object.defineProperty(exports,"__esModule",{value:!0}),exports.useFont=void 0;let tslib_1=require("tslib"),react_1=require("react"),axios_1=tslib_1.__importDefault(require("axios")),swr_1=tslib_1.__importDefault(require("swr")),three_1=require("three"),parser_1=require("../parser"),useFont=(e=null,r=null,t=null)=>{let a=(0,react_1.useRef)(t),u=(0,react_1.useRef)(new Array(2).fill(0)),s=(0,react_1.useRef)(new Array(2).fill(0)),o=(0,react_1.useRef)(0),l=(0,react_1.useRef)(0),c=(0,react_1.useRef)(0),i=(0,react_1.useRef)(0);var{data:t,error:e,isLoading:n}=(0,swr_1.default)(e,e=>f(e,0),{revalidateOnFocus:!1,revalidateOnReconnect:!1}),{data:r,error:d,isLoading:_}=(0,swr_1.default)(r,e=>p(e,1),{revalidateOnFocus:!1,revalidateOnReconnect:!1});let f=async(t,n)=>t?axios_1.default.get(t,{onDownloadProgress:async e=>{w(n,e.loaded,null!=(e=e.total)?e:0,t)}}).then(async e=>{i.current++,w(n,s.current[n],s.current[n],t);var r=e.data;switch(null==(e=t.split(".").pop())?void 0:e.toLowerCase()){case"xml":return(new parser_1.BMFontXMLParser).parse(r);case"bin":return(new parser_1.BMFontBinaryParser).parse(Buffer.from(r,"utf-8"));case"json":return(new parser_1.BMFontJsonParser).parse(r);default:return(new parser_1.BMFontAsciiParser).parse(r)}}):null,p=async(r,t)=>r?axios_1.default.get(r,{responseType:"arraybuffer",headers:{"Content-Type":"image/*"},onDownloadProgress:async e=>{w(t,e.loaded,null!=(e=e.total)?e:0,r)}}).then(async e=>{i.current++,w(t,s.current[t],s.current[t],r);e=new Blob([e.data],{type:e.headers["content-type"]}),e=URL.createObjectURL(e);return(new three_1.TextureLoader).load(e)}):null,w=(e,r,t,n)=>{u.current[e]=r,s.current[e]=t;r=s.current.filter(e=>0!==e).length,e=r/2;o.current=u.current.reduce((e,r)=>e+r,0),l.current=s.current.reduce((e,r)=>e+r,0),0!==l.current&&(c.current=Math.round(100*o.current/l.current)*e,null!=(t=a.current))&&t.call(a,o.current,l.current,c.current)};return{font:t,texture:r,fontError:e,textureError:d,isLoading:n||_}};exports.useFont=useFont;