Object.defineProperty(exports,"__esModule",{value:!0}),exports.useFont=void 0;let tslib_1=require("tslib"),react_1=require("react"),axios_1=tslib_1.__importDefault(require("axios")),swr_1=tslib_1.__importDefault(require("swr")),three_1=require("three"),parser_1=require("../parser"),useFont=(n=null,e=null,u=null)=>{let a=(0,react_1.useRef)(new Array(2).fill(0)),s=(0,react_1.useRef)(new Array(2).fill(0)),l=(0,react_1.useRef)(0),o=(0,react_1.useRef)(0),c=(0,react_1.useRef)(0),i=(0,react_1.useRef)(0);var{data:r,isLoading:t}=(0,swr_1.default)(n,e=>d(e,0)),{data:e,isLoading:_}=(0,swr_1.default)(e,e=>f(e,1));let d=async(t,n)=>t?axios_1.default.get(t,{onDownloadProgress:async e=>{p(n,e.loaded,null!=(e=e.total)?e:0)}}).then(async e=>{i.current++,p(n,s.current[n],s.current[n]);var r=e.data;switch(null==(e=t.split(".").pop())?void 0:e.toLowerCase()){case"xml":return(new parser_1.BMFontXMLParser).parse(r);case"bin":return(new parser_1.BMFontBinaryParser).parse(Buffer.from(r,"utf-8"));case"json":return(new parser_1.BMFontJsonParser).parse(r);default:return(new parser_1.BMFontAsciiParser).parse(r)}}):null,f=async(e,n)=>e?new Promise((r,t)=>{(new three_1.TextureLoader).load(e,e=>{i.current++,p(n,s.current[n],s.current[n]),r(e)},e=>{p(n,e.loaded,null!=(e=e.total)?e:0)},e=>{t(e)})}):null,p=(e,r,t)=>{a.current[e]=r,s.current[e]=t,l.current=a.current.reduce((e,r)=>e+r,0),o.current=s.current.reduce((e,r)=>e+r,0),0!==l.current&&0!==o.current&&(c.current=Math.round(100*l.current/o.current),console.log("calculateProgress","fontUrl",n,"onProgress",u),null!=u)&&u(l.current,o.current,c.current)};return{font:r,texture:e,isLoading:t||_}};exports.useFont=useFont;