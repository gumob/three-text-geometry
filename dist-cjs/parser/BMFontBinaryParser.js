"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BMFontBinaryParser=void 0;const error_1=require("../error"),types_1=require("../types");class BMFontBinaryParser{parse(t){if(t.length<6)throw new error_1.BMFontLoaderError(error_1.BMFontLoaderErrorType.ParseError,"Invalid buffer length for BMFont");if(!BMFontBinaryParser.HEADER.every((r,e)=>t.readUInt8(e)===r))throw new error_1.BMFontLoaderError(error_1.BMFontLoaderErrorType.ParseError,"BMFont missing BMF byte header");let e=3;if(3<t.readUInt8(e++))throw new error_1.BMFontLoaderError(error_1.BMFontLoaderErrorType.ParseError,"Only supports BMFont Binary v3 (BMFont App v1.10)");var a=(0,types_1.DefaultBMFont)();for(let r=0;r<5;r++)e+=this.readBlock(a,t,e);return a}readBlock(r,e,t){if(t>e.length-1)return 0;var a=e.readUInt8(t++),n=e.readInt32LE(t);switch(t+=4,a){case 1:r.info=this.readInfo(e,t);break;case 2:r.common=this.readCommon(e,t);break;case 3:r.pages=this.readPages(e,t,n);break;case 4:r.chars=this.readChars(e,t,n);break;case 5:r.kernings=this.readKernings(e,t,n)}return 5+n}readInfo(r,e){const t=(0,types_1.DefaultBMFontInfo)();t.size=r.readInt16LE(e);var a=r.readUInt8(e+2);return t.smooth=a>>7&1,t.unicode=a>>6&1,t.italic=a>>5&1,t.bold=a>>4&1,a>>3&1&&(t.fixedHeight=1),t.stretchH=r.readUInt16LE(e+4),t.aa=r.readUInt8(e+6),t.padding=[r.readInt8(e+7),r.readInt8(e+8),r.readInt8(e+9),r.readInt8(e+10)],t.spacing=[r.readInt8(e+11),r.readInt8(e+12)],t.outline=r.readUInt8(e+13),t.face=this.readStringNT(r,e+14),t}readCommon(r,e){const t=(0,types_1.DefaultBMFontCommon)();return t.lineHeight=r.readUInt16LE(e),t.base=r.readUInt16LE(e+2),t.scaleW=r.readUInt16LE(e+4),t.scaleH=r.readUInt16LE(e+6),t.pages=r.readUInt16LE(e+8),t.packed=0,t.alphaChnl=r.readUInt8(e+11),t.redChnl=r.readUInt8(e+12),t.greenChnl=r.readUInt8(e+13),t.blueChnl=r.readUInt8(e+14),t}readPages(e,t,r){const a=[];var n=this.readNameNT(e,t),o=n.length+1,d=r/o;for(let r=0;r<d;r++)a[r]=e.slice(t,t+n.length).toString("utf8"),t+=o;return a}readChars(e,t,r){const a=[];var n=r/20;for(let r=0;r<n;r++){const d={id:0,index:0,char:"",width:0,height:0,xoffset:0,yoffset:0,xadvance:0,chnl:0,x:0,y:0,page:0};var o=20*r;d.id=e.readUInt32LE(t+0+o),d.x=e.readUInt16LE(t+4+o),d.y=e.readUInt16LE(t+6+o),d.width=e.readUInt16LE(t+8+o),d.height=e.readUInt16LE(t+10+o),d.xoffset=e.readInt16LE(t+12+o),d.yoffset=e.readInt16LE(t+14+o),d.xadvance=e.readInt16LE(t+16+o),d.page=e.readUInt8(t+18+o),d.chnl=e.readUInt8(t+19+o),a[r]=d}return a}readKernings(e,t,r){const a=[];var n=r/10;for(let r=0;r<n;r++){const d=(0,types_1.DefaultBMFontKern)();var o=10*r;d.first=e.readUInt32LE(t+0+o),d.second=e.readUInt32LE(t+4+o),d.amount=e.readInt16LE(t+8+o),a[r]=d}return a}readStringNT(r,e){return this.readNameNT(r,e).toString("utf8")}readNameNT(r,e){let t=e;for(;t<r.length&&0!==r[t];t++);return r.slice(e,t)}}exports.BMFontBinaryParser=BMFontBinaryParser,BMFontBinaryParser.HEADER=[66,77,70];