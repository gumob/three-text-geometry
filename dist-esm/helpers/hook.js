import{useRef}from"react";import axios from"axios";import useSWR from"swr";import{TextureLoader}from"three";import{BMFontAsciiParser,BMFontBinaryParser,BMFontJsonParser,BMFontXMLParser}from"../parser";let useFont=(e=null,r=null,n=null)=>{let a=useRef(n),s=useRef(new Array(2).fill(0)),o=useRef(new Array(2).fill(0)),u=useRef(0),c=useRef(0),l=useRef(0),i=useRef(0);var{data:n,isLoading:e}=useSWR(e,e=>d(e,0),{revalidateOnFocus:!1,revalidateOnReconnect:!1}),{data:r,isLoading:t}=useSWR(r,e=>f(e,1),{revalidateOnFocus:!1,revalidateOnReconnect:!1});let d=async(n,t)=>n?axios.get(n,{onDownloadProgress:async e=>{p(t,e.loaded,e.total??0,n)}}).then(async e=>{i.current++,p(t,o.current[t],o.current[t],n);var r=e.data;switch(n.split(".").pop()?.toLowerCase()){case"xml":return(new BMFontXMLParser).parse(r);case"bin":return(new BMFontBinaryParser).parse(Buffer.from(r,"utf-8"));case"json":return(new BMFontJsonParser).parse(r);default:return(new BMFontAsciiParser).parse(r)}}):null,f=async(r,n)=>r?axios.get(r,{responseType:"arraybuffer",headers:{"Content-Type":"image/*"},onDownloadProgress:async e=>{p(n,e.loaded,e.total??0,r)}}).then(async e=>{i.current++,p(n,o.current[n],o.current[n],r);e=new Blob([e.data],{type:e.headers["content-type"]}),e=URL.createObjectURL(e);return(new TextureLoader).load(e)}):null,p=(e,r,n,t)=>{s.current[e]=r,o.current[e]=n;r=o.current.filter(e=>0!==e).length/2;u.current=s.current.reduce((e,r)=>e+r,0),c.current=o.current.reduce((e,r)=>e+r,0),0!==c.current&&(l.current=Math.round(100*u.current/c.current)*r,a.current?.(u.current,c.current,l.current))};return{font:n,texture:r,isLoading:e||t}};export{useFont};