import axios from"axios";import useSWR from"swr";import{TextureLoader}from"three";import{BMFontAsciiParser,BMFontBinaryParser,BMFontJsonParser,BMFontXMLParser}from"../parser";let useFont=(o,r,s)=>{let t=new Array(2).fill(0),n=new Array(2).fill(0),i=0,d=0,u=0,l=0,c=(r,e,a)=>{t[r]=e,n[r]=a,i=t.reduce((r,e)=>r+e,0),d=n.reduce((r,e)=>r+e,0),0!==i&&0!==d&&(u=Math.round(100*i/d),s?.(i,d,u))};var{data:e,isLoading:a}=useSWR(o,r=>(async(r,a)=>axios.get(r,{onDownloadProgress:async r=>{c(a,r.loaded,r.total??0)}}).then(async r=>{l++,c(a,n[a],n[a]);var e=r.data;switch(o.split(".").pop()?.toLowerCase()){case"xml":return(new BMFontXMLParser).parse(e);case"bin":return(new BMFontBinaryParser).parse(Buffer.from(e,"utf-8"));case"json":return(new BMFontJsonParser).parse(e);default:return(new BMFontAsciiParser).parse(e)}}))(r,0)),{data:r,isLoading:p}=useSWR(r,r=>(async(r,e)=>axios.get(r,{onDownloadProgress:async r=>{c(e,r.loaded,r.total??0)}}).then(async r=>(l++,c(e,n[e],n[e]),(new TextureLoader).load(r.data))))(r,1));return{font:e,texture:r,isLoading:a||p}};export{useFont};