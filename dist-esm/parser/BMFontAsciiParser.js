import{BMFontLoaderError,BMFontLoaderErrorType}from"../error";import{DefaultBMFont,DefaultBMFontCommon,DefaultBMFontInfo}from"../types";class BMFontAsciiParser{parse(r){const o=(r=r.trim()).split(/\r\n?|\n/g);if(0===o.length)throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError,"No data in BMFont file");const n=DefaultBMFont();if(o.forEach((r,o)=>{if(r=r.replace(/[\s\t]+/g," ").trim()){var e=r.indexOf(" ");if(-1===e)throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError,"No page data");var t=r.substring(0,e);const a={};switch(r.substring(e+1).replace(/[\s\t]+/g," ").split(" ").forEach(r=>{var o=r.split("="),r=o[0];const e=o[1];/^-?\d+\.?\d*$/.test(e)?a[r]=+e:/^[\d,]+/.test(e)?a[r]=e.split(",").map(r=>+r):/^("|').*("|')$/.test(e)?a[r]=e.replace(/^("|')(.*)("|')$/g,"$2"):a[r]=e}),t){case"info":n.info=a;break;case"common":n.common=a;break;case"distanceField":n.distanceField=a;break;case"page":n.pages.push(a.file);break;case"chars":break;case"char":n.chars.push(a);break;case"kernings":break;case"kerning":n.kernings.push(a)}}}),JSON.stringify(n.info)===JSON.stringify(DefaultBMFontInfo()))throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError,`No info data. 
`+JSON.stringify(n));if(JSON.stringify(n.common)===JSON.stringify(DefaultBMFontCommon()))throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError,`No common data. 
`+JSON.stringify(n));if(0==n.pages.length)throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError,`No page data. 
`+JSON.stringify(n));if(0==n.chars.length)throw new BMFontLoaderError(BMFontLoaderErrorType.ParseError,`No char data. 
`+JSON.stringify(n));return n}}export{BMFontAsciiParser};