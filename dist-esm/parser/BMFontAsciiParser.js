import{BMFontError}from"../error";import{DefaultBMFont,DefaultBMFontCommon,DefaultBMFontInfo}from"../types";class BMFontAsciiParser{parse(r){const t=(r=r.trim()).split(/\r\n?|\n/g);if(0===t.length)throw new BMFontError("No data in BMFont file");const a=DefaultBMFont();if(t.forEach((r,t)=>{if(r=r.replace(/[\s\t]+/g," ").trim()){var o=r.indexOf(" ");if(-1===o)throw new BMFontError("No page data");var n=r.substring(0,o);const e={};switch(r.substring(o+1).replace(/[\s\t]+/g," ").split(" ").forEach(r=>{var t=r.split("="),r=t[0];const o=t[1];/^-?\d+\.?\d*$/.test(o)?e[r]=+o:/^[\d,]+/.test(o)?e[r]=o.split(",").map(r=>+r):/^("|').*("|')$/.test(o)?e[r]=o.replace(/^("|')(.*)("|')$/g,"$2"):e[r]=o}),n){case"info":a.info=e;break;case"common":a.common=e;break;case"distanceField":a.distanceField=e;break;case"page":a.pages.push(e.file);break;case"chars":break;case"char":a.chars.push(e);break;case"kernings":break;case"kerning":a.kernings.push(e)}}}),JSON.stringify(a.info)===JSON.stringify(DefaultBMFontInfo()))throw new BMFontError(`No info data. 
`+JSON.stringify(a));if(JSON.stringify(a.common)===JSON.stringify(DefaultBMFontCommon()))throw new BMFontError(`No common data. 
`+JSON.stringify(a));if(0==a.pages.length)throw new BMFontError(`No page data. 
`+JSON.stringify(a));if(0==a.chars.length)throw new BMFontError(`No char data. 
`+JSON.stringify(a));return a}}export{BMFontAsciiParser};