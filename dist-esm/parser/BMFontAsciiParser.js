import{BMFontError}from"../error";import{DefaultBMFont,DefaultBMFontCommon,DefaultBMFontInfo}from"../types";class BMFontAsciiParser{parse(r){if(0===(r=(r=r.trim()).split(/\r\n?|\n/g)).length)throw new BMFontError("No data in BMFont file");let n=DefaultBMFont();if(r.forEach((t,r)=>{if(t=t.replace(/[\s\t]+/g," ").trim()){var o=t.indexOf(" ");if(-1===o)throw new BMFontError("No page data");let r=t.substring(0,o),e={};switch(t.substring(o+1).replace(/[\s\t]+/g," ").split(" ").forEach(r=>{var t=(r=r.split("="))[0],r=r[1];/^-?\d+\.?\d*$/.test(r)?e[t]=+r:/^[\d,]+/.test(r)?e[t]=r.split(",").map(r=>+r):/^("|').*("|')$/.test(r)?e[t]=r.replace(/^("|')(.*)("|')$/g,"$2"):e[t]=r}),r){case"info":n.info=e;break;case"common":n.common=e;break;case"distanceField":n.distanceField=e;break;case"page":n.pages.push(e.file);break;case"chars":break;case"char":n.chars.push(e);break;case"kernings":break;case"kerning":n.kernings.push(e)}}}),JSON.stringify(n.info)===JSON.stringify(DefaultBMFontInfo()))throw new BMFontError(`No info data. 
`+JSON.stringify(n));if(JSON.stringify(n.common)===JSON.stringify(DefaultBMFontCommon()))throw new BMFontError(`No common data. 
`+JSON.stringify(n));if(0==n.pages.length)throw new BMFontError(`No page data. 
`+JSON.stringify(n));if(0==n.chars.length)throw new BMFontError(`No char data. 
`+JSON.stringify(n));return n}}export{BMFontAsciiParser};