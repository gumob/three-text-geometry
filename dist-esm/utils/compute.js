function bounds(n){const a={min:[0,0],max:[0,0]};if(!n[0]||!n[1])return a;var i=n.length/2;a.min[0]=n[0],a.min[1]=n[1],a.max[0]=n[0],a.max[1]=n[1];for(let m=0;m<i;m++){var t=n[2*m+0],x=n[2*m+1];t&&x&&(a.min[0]=Math.min(t,a.min[0]),a.min[1]=Math.min(x,a.min[1]),a.max[0]=Math.max(t,a.max[0]),a.max[1]=Math.max(x,a.max[1]))}return a}function computeBox(m,n){m=bounds(m);m.min[0]&&m.min[1]&&m.max[0]&&m.max[1]&&(n.min.set(m.min[0],m.min[1],0),n.max.set(m.max[0],m.max[1],0))}function computeSphere(m,n){var a,i,t,x=bounds(m);x.min[0]&&x.min[1]&&x.max[0]&&x.max[1]&&(a=x.min[0],i=x.min[1],t=x.max[0]-a,m=x.max[1]-i,x=Math.sqrt(t*t+m*m),n.center.set(a+t/2,i+m/2,0),n.radius=x/2)}export{computeBox,computeSphere};